{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter, signal, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nlet FileSelectorComponent = class FileSelectorComponent {\n  ngOnInit() {\n    this.setupMessageHandlers();\n    this.loadInitialData();\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  constructor(vscode) {\n    this.vscode = vscode;\n    this.selectionChanged = new EventEmitter();\n    this.subscriptions = new Subscription();\n    this.isLoadingData = signal(false);\n    this.isGeneratingDiff = signal(false);\n    this.showDiffDisplay = signal(false);\n    this.diffDisplayData = signal(null);\n    this.streamingOutput = signal('');\n    this.wrapLines = signal(false);\n    this.isDiffExpanded = signal(false);\n    this.selectionModes = [{\n      type: 'uncommitted',\n      label: 'Uncommitted',\n      icon: '📝',\n      description: 'Changes not yet committed'\n    }, {\n      type: 'commit',\n      label: 'Previous Commit',\n      icon: '📚',\n      description: 'Select from git history'\n    }, {\n      type: 'branch-diff',\n      label: 'Branch Diff',\n      icon: '🌿',\n      description: 'All changes from current branch'\n    }];\n    this.currentMode = signal('uncommitted');\n    this.uncommittedFiles = signal([]);\n    this.commits = signal([]);\n    this.filteredCommits = signal([]);\n    this.selectedCommits = signal([]); // Changed to array for multiple selection\n    this.branchDiffStats = signal(null);\n    this.commitSearch = '';\n  }\n  selectMode(mode) {\n    this.currentMode.set(mode);\n    this.clearDiffDisplayOnSelectionChange();\n    this.emitSelection();\n  }\n  getModeButtonClass(mode) {\n    const baseClass = 'border transition-all duration-200';\n    if (this.currentMode() === mode) {\n      return `${baseClass} bg-vscode-button-background text-vscode-button-foreground border-vscode-button-background`;\n    }\n    return `${baseClass} bg-vscode-button-secondaryBackground text-vscode-button-secondaryForeground border-vscode-panel-border hover:bg-vscode-list-hoverBackground`;\n  }\n  getStatusBadgeClass(status) {\n    switch (status) {\n      case 'added':\n        return 'bg-green-100 text-green-800 border border-green-200';\n      case 'modified':\n        return 'bg-blue-100 text-blue-800 border border-blue-200';\n      case 'deleted':\n        return 'bg-red-100 text-red-800 border border-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border border-gray-200';\n    }\n  }\n  getTerminalStatusBadgeStyle(status) {\n    switch (status) {\n      case 'added':\n        return {\n          'background': '#1a2a1a',\n          'color': '#6BCF7F',\n          'border': '1px solid #6BCF7F'\n        };\n      case 'modified':\n        return {\n          'background': '#1a2a2a',\n          'color': '#4ECDC4',\n          'border': '1px solid #4ECDC4'\n        };\n      case 'deleted':\n        return {\n          'background': '#2a1a1a',\n          'color': '#FF4B6D',\n          'border': '1px solid #FF4B6D'\n        };\n      default:\n        return {\n          'background': '#2a2a2a',\n          'color': '#e5e5e5',\n          'border': '1px solid #666'\n        };\n    }\n  }\n  getStatusIcon(status) {\n    switch (status) {\n      case 'added':\n        return '✚';\n      case 'modified':\n        return '⚡';\n      case 'deleted':\n        return '✗';\n      default:\n        return '?';\n    }\n  }\n  toggleFileSelection(file) {\n    const files = this.uncommittedFiles();\n    const index = files.findIndex(f => f.path === file.path);\n    if (index !== -1) {\n      files[index].selected = !files[index].selected;\n      this.uncommittedFiles.set([...files]);\n      this.clearDiffDisplayOnSelectionChange();\n      this.emitSelection();\n    }\n  }\n  toggleSelectAll() {\n    const files = this.uncommittedFiles();\n    const allSelected = this.areAllSelected();\n    files.forEach(f => f.selected = !allSelected);\n    this.uncommittedFiles.set([...files]);\n    this.clearDiffDisplayOnSelectionChange();\n    this.emitSelection();\n  }\n  areAllSelected() {\n    const files = this.uncommittedFiles();\n    return files.length > 0 && files.every(f => f.selected);\n  }\n  selectCommit(commit) {\n    const commits = this.filteredCommits();\n    const clickedIndex = commits.findIndex(c => c.hash === commit.hash);\n    if (clickedIndex === -1) return;\n    // If commit is already selected, deselect it and all commits after it\n    if (commit.selected) {\n      this.deselectCommitAndAfter(clickedIndex);\n    } else {\n      // Select from this commit to the latest (index 0)\n      this.selectCommitRange(0, clickedIndex);\n    }\n    this.updateSelectedCommits();\n    this.clearDiffDisplayOnSelectionChange();\n    this.emitSelection();\n  }\n  selectCommitRange(startIndex, endIndex) {\n    const commits = this.filteredCommits();\n    // Clear all selections first\n    commits.forEach(c => c.selected = false);\n    // Select range from start to end (inclusive)\n    for (let i = startIndex; i <= endIndex; i++) {\n      if (commits[i]) {\n        commits[i].selected = true;\n      }\n    }\n    this.filteredCommits.set([...commits]);\n    // Also update the main commits array if they're different\n    if (this.commitSearch) {\n      const allCommits = this.commits();\n      commits.forEach(filteredCommit => {\n        const mainCommit = allCommits.find(c => c.hash === filteredCommit.hash);\n        if (mainCommit) {\n          mainCommit.selected = filteredCommit.selected;\n        }\n      });\n      this.commits.set([...allCommits]);\n    }\n  }\n  deselectCommitAndAfter(fromIndex) {\n    const commits = this.filteredCommits();\n    // Deselect from clicked commit to the end\n    for (let i = fromIndex; i < commits.length; i++) {\n      if (commits[i]) {\n        commits[i].selected = false;\n      }\n    }\n    this.filteredCommits.set([...commits]);\n    // Also update the main commits array if they're different\n    if (this.commitSearch) {\n      const allCommits = this.commits();\n      commits.forEach(filteredCommit => {\n        const mainCommit = allCommits.find(c => c.hash === filteredCommit.hash);\n        if (mainCommit) {\n          mainCommit.selected = filteredCommit.selected;\n        }\n      });\n      this.commits.set([...allCommits]);\n    }\n  }\n  updateSelectedCommits() {\n    const selectedCommits = this.filteredCommits().filter(c => c.selected);\n    this.selectedCommits.set(selectedCommits);\n  }\n  clearCommitSelection() {\n    const commits = this.filteredCommits();\n    commits.forEach(c => c.selected = false);\n    this.filteredCommits.set([...commits]);\n    const allCommits = this.commits();\n    allCommits.forEach(c => c.selected = false);\n    this.commits.set([...allCommits]);\n    this.selectedCommits.set([]);\n    this.clearDiffDisplayOnSelectionChange();\n    this.emitSelection();\n  }\n  filterCommits() {\n    const search = this.commitSearch.toLowerCase();\n    const filtered = this.commits().filter(commit => commit.message.toLowerCase().includes(search) || commit.hash.toLowerCase().includes(search) || commit.author.toLowerCase().includes(search));\n    this.filteredCommits.set(filtered);\n  }\n  formatDate(date) {\n    return new Intl.RelativeTimeFormat('en', {\n      numeric: 'auto'\n    }).format(Math.floor((date.getTime() - Date.now()) / (1000 * 60 * 60 * 24)), 'day');\n  }\n  hasValidSelection() {\n    switch (this.currentMode()) {\n      case 'uncommitted':\n        return this.uncommittedFiles().some(f => f.selected);\n      case 'commit':\n        return this.selectedCommits().length > 0;\n      case 'branch-diff':\n        return this.branchDiffStats() !== null;\n      default:\n        return false;\n    }\n  }\n  getSelectionSummary() {\n    switch (this.currentMode()) {\n      case 'uncommitted':\n        const selected = this.uncommittedFiles().filter(f => f.selected).length;\n        const total = this.uncommittedFiles().length;\n        return `${selected}/${total} files selected`;\n      case 'commit':\n        const selectedCommits = this.selectedCommits();\n        if (selectedCommits.length === 0) {\n          return 'No commits selected';\n        } else if (selectedCommits.length === 1) {\n          return `1 commit selected: ${selectedCommits[0].hash.substring(0, 7)}`;\n        } else {\n          const latest = selectedCommits[0].hash.substring(0, 7);\n          const oldest = selectedCommits[selectedCommits.length - 1].hash.substring(0, 7);\n          return `${selectedCommits.length} commits selected: ${latest}...${oldest}`;\n        }\n      case 'branch-diff':\n        return this.branchDiffStats() ? `${this.branchDiffStats().filesChanged} files in diff` : 'Loading diff...';\n      default:\n        return '';\n    }\n  }\n  refreshData() {\n    // Clear current data\n    this.uncommittedFiles.set([]);\n    this.commits.set([]);\n    this.filteredCommits.set([]);\n    this.branchDiffStats.set(null);\n    this.selectedCommits.set([]);\n    // Clear any existing diff display\n    this.clearDiffDisplayOnSelectionChange();\n    // Reload from Git\n    this.loadInitialData();\n  }\n  applySelection() {\n    this.emitSelection();\n  }\n  generateAndViewDiff() {\n    if (!this.hasValidSelection()) return;\n    this.isGeneratingDiff.set(true);\n    this.showDiffDisplay.set(true);\n    this.streamingOutput.set('');\n    const mode = this.currentMode();\n    let diffData = {\n      mode\n    };\n    // Add specific data based on mode\n    switch (mode) {\n      case 'commit':\n        const selectedCommits = this.selectedCommits();\n        if (selectedCommits.length === 1) {\n          diffData.commitHash = selectedCommits[0].hash;\n        } else if (selectedCommits.length > 1) {\n          // For multiple commits, use the oldest commit hash\n          diffData.commitHash = selectedCommits[selectedCommits.length - 1].hash;\n        }\n        break;\n      case 'uncommitted':\n      case 'branch-diff':\n        // No additional data needed\n        break;\n    }\n    // Send message to generate diff\n    this.vscode.postMessage('generateGitDiff', diffData);\n  }\n  closeDiffDisplay() {\n    this.showDiffDisplay.set(false);\n    this.diffDisplayData.set(null);\n    this.streamingOutput.set('');\n  }\n  clearDiffDisplayOnSelectionChange() {\n    // Only clear if there's currently a diff displayed\n    if (this.showDiffDisplay()) {\n      this.showDiffDisplay.set(false);\n      this.diffDisplayData.set(null);\n      this.streamingOutput.set('');\n      // Show a subtle notification that diff was cleared due to selection change\n      this.vscode.postMessage('showNotification', {\n        message: 'Git diff cleared due to selection change',\n        type: 'info'\n      });\n      console.log('Git diff cleared due to selection change');\n    }\n  }\n  rerunDiff() {\n    if (!this.diffDisplayData()) return;\n    const mode = this.currentMode();\n    let diffData = {\n      mode\n    };\n    // Add specific data based on mode\n    switch (mode) {\n      case 'commit':\n        const selectedCommits = this.selectedCommits();\n        if (selectedCommits.length === 1) {\n          diffData.commitHash = selectedCommits[0].hash;\n        } else if (selectedCommits.length > 1) {\n          diffData.commitHash = selectedCommits[selectedCommits.length - 1].hash;\n        }\n        break;\n      case 'uncommitted':\n      case 'branch-diff':\n        break;\n    }\n    this.isGeneratingDiff.set(true);\n    this.streamingOutput.set('');\n    this.vscode.postMessage('generateGitDiff', diffData);\n  }\n  openDiffFile() {\n    const filePath = this.diffDisplayData()?.filePath;\n    if (filePath) {\n      this.vscode.postMessage('openDiffFile', {\n        filePath\n      });\n    }\n  }\n  deleteDiffFile() {\n    const filePath = this.diffDisplayData()?.filePath;\n    if (filePath) {\n      this.vscode.postMessage('deleteDiffFile', {\n        filePath\n      });\n    }\n  }\n  cleanupAllDiffFiles() {\n    this.vscode.postMessage('cleanupAllDiffFiles');\n  }\n  copyDiffToClipboard() {\n    const content = this.diffDisplayData()?.content;\n    if (content) {\n      navigator.clipboard.writeText(content).then(() => {\n        this.vscode.postMessage('showNotification', {\n          message: 'Diff content copied to clipboard!',\n          type: 'info'\n        });\n      }).catch(error => {\n        console.error('Failed to copy to clipboard:', error);\n        this.vscode.postMessage('showNotification', {\n          message: 'Failed to copy to clipboard',\n          type: 'error'\n        });\n      });\n    }\n  }\n  toggleDiffExpanded() {\n    this.isDiffExpanded.set(!this.isDiffExpanded());\n  }\n  // Helper methods for diff display\n  getDiffModeLabel() {\n    const mode = this.currentMode();\n    switch (mode) {\n      case 'uncommitted':\n        return 'Uncommitted Changes';\n      case 'commit':\n        return 'Commit Diff';\n      case 'branch-diff':\n        return 'Branch to Main Diff';\n      default:\n        return 'Unknown';\n    }\n  }\n  getContentSize() {\n    const content = this.diffDisplayData()?.content;\n    if (!content) return '0 bytes';\n    const bytes = new Blob([content]).size;\n    if (bytes < 1024) return `${bytes} bytes`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(1)} KB`;\n    return `${(bytes / 1024 / 1024).toFixed(1)} MB`;\n  }\n  maxDiffHeight() {\n    return this.isDiffExpanded() ? 600 : 300;\n  }\n  isDiffTruncated() {\n    const content = this.diffDisplayData()?.content;\n    return content ? content.split('\\n').length > 20 : false;\n  }\n  setupMessageHandlers() {\n    this.subscriptions.add(this.vscode.onMessage().subscribe(message => {\n      if (!message) return;\n      switch (message.command) {\n        case 'uncommittedChanges':\n          this.handleUncommittedChangesResponse(message.data);\n          break;\n        case 'commitHistory':\n          this.handleCommitHistoryResponse(message.data);\n          break;\n        case 'branchDiff':\n          this.handleBranchDiffResponse(message.data);\n          break;\n        case 'gitDiffProgress':\n          this.handleGitDiffProgress(message.data);\n          break;\n        case 'gitDiffComplete':\n          this.handleGitDiffComplete(message.data);\n          break;\n        case 'gitDiffError':\n          this.handleGitDiffError(message.data);\n          break;\n        case 'gitDiffFileDeleted':\n          this.handleGitDiffFileDeleted(message.data);\n          break;\n        case 'allDiffFilesDeleted':\n          this.handleAllDiffFilesDeleted(message.data);\n          break;\n        case 'workflowError':\n          this.handleError(message.data?.error);\n          break;\n      }\n    }));\n  }\n  loadInitialData() {\n    this.isLoadingData.set(true);\n    // Request real data from VSCode extension\n    this.vscode.postMessage('getUncommittedChanges');\n    this.vscode.postMessage('getCommitHistory', {\n      limit: 50\n    });\n    this.vscode.postMessage('getBranchDiff');\n  }\n  handleUncommittedChangesResponse(changes) {\n    const fileChanges = changes.map(change => ({\n      path: change.path,\n      status: change.status,\n      selected: true // Default to selected for all uncommitted files\n    }));\n    this.uncommittedFiles.set(fileChanges);\n    this.isLoadingData.set(false);\n    // Auto-emit selection if we have data and current mode is uncommitted\n    if (this.currentMode() === 'uncommitted') {\n      this.emitSelection();\n    }\n  }\n  handleCommitHistoryResponse(commits) {\n    const gitCommits = commits.map(commit => ({\n      hash: commit.hash,\n      message: commit.message,\n      author: commit.author,\n      date: new Date(commit.date),\n      files: commit.files || [],\n      selected: false // Initialize all commits as unselected\n    }));\n    this.commits.set(gitCommits);\n    this.filteredCommits.set(gitCommits);\n    this.isLoadingData.set(false);\n  }\n  handleBranchDiffResponse(data) {\n    this.branchDiffStats.set({\n      filesChanged: data.stats.filesChanged,\n      additions: data.stats.additions,\n      deletions: data.stats.deletions\n    });\n    this.isLoadingData.set(false);\n    // Auto-emit selection if current mode is branch-diff\n    if (this.currentMode() === 'branch-diff') {\n      this.emitSelection();\n    }\n  }\n  handleGitDiffProgress(data) {\n    const current = this.streamingOutput();\n    this.streamingOutput.set(current + data.output);\n  }\n  handleGitDiffComplete(data) {\n    this.isGeneratingDiff.set(false);\n    this.diffDisplayData.set(data);\n    this.streamingOutput.set(''); // Clear streaming output when complete\n    console.log('Git diff generated successfully:', data);\n  }\n  handleGitDiffError(data) {\n    this.isGeneratingDiff.set(false);\n    this.diffDisplayData.set({\n      mode: data.mode,\n      content: '',\n      timestamp: new Date(),\n      status: 'error',\n      error: data.error\n    });\n    this.streamingOutput.set(''); // Clear streaming output on error\n    console.error('Git diff generation failed:', data.error);\n  }\n  handleGitDiffFileDeleted(data) {\n    const current = this.diffDisplayData();\n    if (current) {\n      this.diffDisplayData.set({\n        ...current,\n        filePath: undefined\n      });\n    }\n  }\n  handleAllDiffFilesDeleted(data) {\n    // Clear current diff display since all files were deleted\n    this.showDiffDisplay.set(false);\n    this.diffDisplayData.set(null);\n    this.streamingOutput.set('');\n    console.log(`All diff files cleaned up: ${data.deleted} deleted, ${data.errors.length} errors`);\n    if (data.errors.length > 0) {\n      console.warn('Cleanup errors:', data.errors);\n    }\n  }\n  handleError(error) {\n    console.error('Git operation failed:', error);\n    this.isLoadingData.set(false);\n    this.isGeneratingDiff.set(false);\n    // Set empty data on error\n    this.uncommittedFiles.set([]);\n    this.commits.set([]);\n    this.filteredCommits.set([]);\n    this.branchDiffStats.set(null);\n    this.selectedCommits.set([]);\n  }\n  emitSelection() {\n    const selection = {\n      mode: this.currentMode(),\n      files: this.currentMode() === 'uncommitted' ? this.uncommittedFiles().filter(f => f.selected) : [],\n      commits: this.currentMode() === 'commit' ? this.selectedCommits() : undefined,\n      diff: this.getCurrentDiff()\n    };\n    this.selectionChanged.emit(selection);\n  }\n  getCurrentDiff() {\n    // For now, return a placeholder - diff will be fetched when needed\n    switch (this.currentMode()) {\n      case 'uncommitted':\n        return 'uncommitted-changes-diff';\n      case 'commit':\n        const selected = this.selectedCommits();\n        if (selected.length === 0) return '';\n        if (selected.length === 1) {\n          return `commit-${selected[0].hash}-diff`;\n        }\n        // For multiple commits, create a range diff\n        const latest = selected[0].hash;\n        const oldest = selected[selected.length - 1].hash;\n        return `commit-range-${oldest}-to-${latest}-diff`;\n      case 'branch-diff':\n        return 'branch-diff';\n      default:\n        return '';\n    }\n  }\n};\n__decorate([Output()], FileSelectorComponent.prototype, \"selectionChanged\", void 0);\nFileSelectorComponent = __decorate([Component({\n  selector: 'app-file-selector',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"bg-gray-900 rounded-lg border border-gray-700 font-mono text-sm h-full p-3\" style=\"background: #1a1a1a; border-color: #333;\">\n      <!-- Terminal Header -->\n      <div class=\"border-b pb-6 mb-8\" style=\"border-color: #333;\">\n        <div class=\"flex items-center gap-2 mb-2\">\n          <span class=\"font-bold\" style=\"color: #A8A8FF;\">$</span>\n          <span class=\"font-bold\" style=\"color: #4ECDC4;\">file-selector</span>\n          <span style=\"color: #FFD93D;\">--mode</span>\n          <span style=\"color: #6BCF7F;\">{{ currentMode() }}</span>\n        </div>\n        <div style=\"color: #666;\" class=\"text-xs\">\n          📁 File Selection | {{ getSelectionSummary() }}\n        </div>\n      </div>\n\n      <!-- Terminal Mode Selection -->\n      <div class=\"mb-8\">\n        <div class=\"mb-4 flex items-center gap-3\">\n          <span style=\"color: #A8A8FF;\">></span>\n          <span style=\"color: #4ECDC4;\">🔍 Select changes from source</span>\n        </div>\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 pl-6\">\n          @for (mode of selectionModes; track mode.type) {\n            <button \n              (click)=\"selectMode(mode.type)\"\n              class=\"px-4 py-3 rounded font-mono font-bold border-2 hover:opacity-90 transition-opacity\"\n              [ngStyle]=\"currentMode() === mode.type ? \n                {'background': '#6BCF7F', 'color': '#000', 'border-color': '#6BCF7F'} : \n                {'background': '#333', 'color': '#e5e5e5', 'border-color': '#666'}\">\n              <div class=\"flex items-center gap-2\">\n                <span>{{ mode.icon }}</span>\n                <span>{{ mode.label }}</span>\n              </div>\n              <div class=\"text-xs mt-1\" style=\"color: #666;\">{{ mode.description }}</div>\n            </button>\n          }\n        </div>\n      </div>\n\n      <!-- Uncommitted Changes View -->\n      @if (currentMode() === 'uncommitted') {\n        <div class=\"space-y-6 mb-8\">\n          <div class=\"mb-4 flex items-center gap-3\">\n            <span style=\"color: #A8A8FF;\">></span>\n            <span style=\"color: #4ECDC4;\">📝 Uncommitted changes detected</span>\n            <button \n              (click)=\"toggleSelectAll()\"\n              class=\"ml-auto px-3 py-1 rounded text-xs font-mono hover:opacity-80\"\n              style=\"background: #333; color: #FFD93D; border: 1px solid #666;\">\n              {{ areAllSelected() ? '✗ Unselect All' : '✓ Select All' }}\n            </button>\n          </div>\n          \n          <div class=\"pl-6\">\n            @if (isLoadingData()) {\n              <div class=\"text-center py-8\">\n                <div class=\"text-2xl mb-2 animate-spin\" style=\"color: #FFD93D;\">⟳</div>\n                <p style=\"color: #4ECDC4;\">Loading uncommitted changes...</p>\n              </div>\n            } @else if (uncommittedFiles().length === 0) {\n              <div class=\"text-center py-8\">\n                <div class=\"text-4xl mb-2\">📝</div>\n                <p style=\"color: #e5e5e5;\">No uncommitted changes found</p>\n                <p class=\"text-xs\" style=\"color: #666;\">Make some changes to see them here</p>\n              </div>\n            } @else {\n              <div class=\"space-y-3 max-h-64 overflow-y-auto rounded p-4\" style=\"border: 1px solid #4a4a4a; background: #1f1f1f;\">\n                @for (file of uncommittedFiles(); track file.path) {\n                  <div class=\"flex items-center gap-3 p-2 rounded hover:opacity-80 py-1\">\n                    <input \n                      type=\"checkbox\" \n                      [checked]=\"file.selected\"\n                      (change)=\"toggleFileSelection(file)\"\n                      class=\"w-4 h-4 rounded\">\n                    <span class=\"flex-1 text-sm font-mono truncate\" style=\"color: #e5e5e5;\">\n                      {{ file.path }}\n                    </span>\n                    <span class=\"px-2 py-1 text-xs rounded font-medium\" [ngStyle]=\"getTerminalStatusBadgeStyle(file.status)\">\n                      {{ getStatusIcon(file.status) }} {{ file.status.toUpperCase() }}\n                    </span>\n                  </div>\n                }\n              </div>\n            }\n          </div>\n          }\n        </div>\n      }\n\n      <!-- Commit Selection View -->\n      @if (currentMode() === 'commit') {\n        <div class=\"space-y-6 mb-8\">\n          <div class=\"mb-4 flex items-center gap-3\">\n            <span style=\"color: #A8A8FF;\">></span>\n            <span style=\"color: #4ECDC4;\">📚 Select commits from history</span>\n            @if (selectedCommits().length > 0) {\n              <button \n                (click)=\"clearCommitSelection()\"\n                class=\"ml-auto px-3 py-1 rounded text-xs font-mono hover:opacity-80\"\n                style=\"background: #333; color: #FF8C42; border: 1px solid #666;\">\n                ✗ Clear ({{ selectedCommits().length }})\n              </button>\n            }\n          </div>\n          \n          <div class=\"rounded p-4 text-xs pl-6\" style=\"background: #2a2a1a; border: 1px solid #4a4a2a;\">\n            <p style=\"color: #e5e5e5;\">\n              <span class=\"font-semibold\" style=\"color: #FFD93D;\">💡 Multi-commit selection:</span>\n              Click a commit to select all commits from that point to the latest.\n              Click a selected commit to deselect it and all commits after it.\n            </p>\n          </div>\n          \n          <div class=\"mb-4 pl-6\">\n            <input \n              type=\"text\"\n              [(ngModel)]=\"commitSearch\"\n              (input)=\"filterCommits()\"\n              placeholder=\"🔍 Search commits by message or hash...\"\n              class=\"w-full px-3 py-2 rounded font-mono text-sm\" style=\"background: #333; color: #e5e5e5; border: 1px solid #666;\">\n          </div>\n          \n          @if (isLoadingData()) {\n            <div class=\"text-center py-8 pl-6\">\n              <div class=\"text-2xl mb-2 animate-spin\" style=\"color: #FFD93D;\">⟳</div>\n              <p style=\"color: #4ECDC4;\">Loading commit history...</p>\n            </div>\n          } @else if (filteredCommits().length === 0) {\n            <div class=\"text-center py-8 pl-6\">\n              <div class=\"text-4xl mb-2\">🔍</div>\n              <p style=\"color: #e5e5e5;\">No commits found</p>\n              @if (commitSearch) {\n                <p class=\"text-xs\" style=\"color: #666;\">Try a different search term</p>\n              }\n            </div>\n          } @else {\n            <div class=\"space-y-3 max-h-64 overflow-y-auto rounded p-4 pl-6\" style=\"border: 1px solid #4a4a4a; background: #1f1f1f;\">\n              @for (commit of filteredCommits(); track commit.hash) {\n                <div \n                  (click)=\"selectCommit(commit)\"\n                  class=\"p-3 rounded hover:opacity-80 cursor-pointer transition-opacity border-l-4\"\n                  [ngStyle]=\"commit.selected ? {'background': '#2a2a1a', 'border-left-color': '#6BCF7F'} : {'background': '#1a1a1a', 'border-left-color': 'transparent'}\"\n                  style=\"border: 1px solid #333;\">\n                  <div class=\"flex items-start gap-3\">\n                    <span class=\"text-xs font-mono mt-1\" style=\"color: #666;\">\n                      {{ commit.hash.substring(0, 7) }}\n                    </span>\n                    <div class=\"flex-1 min-w-0\">\n                      <div class=\"flex items-center gap-2\">\n                        @if (commit.selected) {\n                          <span class=\"text-sm\" style=\"color: #6BCF7F;\">✓</span>\n                        }\n                        <div class=\"text-sm font-medium truncate\" style=\"color: #e5e5e5;\">\n                          {{ commit.message }}\n                        </div>\n                      </div>\n                      <div class=\"text-xs mt-1 flex items-center gap-4\" style=\"color: #666;\">\n                        <span>{{ commit.author }}</span>\n                        <span>{{ formatDate(commit.date) }}</span>\n                        @if (commit.files.length > 0) {\n                          <span>{{ commit.files.length }} file(s)</span>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          }\n        </div>\n      }\n\n      <!-- Branch Diff View -->\n      @if (currentMode() === 'branch-diff') {\n        <div class=\"space-y-6 mb-8\">\n          <div class=\"mb-4 flex items-center gap-3\">\n            <span style=\"color: #A8A8FF;\">></span>\n            <span style=\"color: #4ECDC4;\">🌿 Branch to main comparison</span>\n          </div>\n          \n          <div class=\"rounded p-4 pl-6\" style=\"background: #1f2a1f; border: 1px solid #4a6a4a;\">\n            <div class=\"flex items-center gap-3 mb-4\">\n              <span class=\"text-2xl\">🌿</span>\n              <div>\n                <p class=\"text-sm font-medium\" style=\"color: #6BCF7F;\">\n                  Comparing current branch to main\n                </p>\n                <p class=\"text-xs\" style=\"color: #666;\">\n                  All changes from your branch will be included\n                </p>\n              </div>\n            </div>\n            \n            @if (isLoadingData()) {\n              <div class=\"text-center py-4\">\n                <div class=\"text-xl mb-2 animate-spin\" style=\"color: #FFD93D;\">⟳</div>\n                <p class=\"text-xs\" style=\"color: #4ECDC4;\">Loading branch diff...</p>\n              </div>\n            } @else if (branchDiffStats()) {\n              <div class=\"flex flex-wrap gap-4 text-xs\">\n                <span style=\"color: #e5e5e5;\">\n                  <span class=\"font-semibold\">{{ branchDiffStats()!.filesChanged }}</span> files changed\n                </span>\n                <span style=\"color: #6BCF7F;\">\n                  +{{ branchDiffStats()!.additions }} additions\n                </span>\n                <span style=\"color: #FF4B6D;\">\n                  -{{ branchDiffStats()!.deletions }} deletions\n                </span>\n              </div>\n            } @else {\n              <div class=\"text-center py-4\">\n                <p class=\"text-xs\" style=\"color: #666;\">No diff available</p>\n              </div>\n            }\n          </div>\n        </div>\n      }\n\n      <!-- Terminal Action Buttons -->\n      <div class=\"mt-8 flex gap-3 justify-end\">\n        <button \n          (click)=\"refreshData()\"\n          [disabled]=\"isLoadingData()\"\n          class=\"px-4 py-2 text-sm font-mono font-bold rounded border-2 hover:opacity-90 disabled:opacity-50 disabled:cursor-not-allowed transition-opacity\"\n          style=\"background: #333; color: #4ECDC4; border-color: #666;\">\n          @if (isLoadingData()) {\n            <span class=\"animate-spin\">⟳</span>\n            <span class=\"ml-2\">REFRESH --loading</span>\n          } @else {\n            <span class=\"flex items-center gap-2\">\n              <span>🔄</span>\n              <span>REFRESH --data</span>\n            </span>\n          }\n        </button>\n        <button \n          (click)=\"generateAndViewDiff()\"\n          [disabled]=\"!hasValidSelection() || isGeneratingDiff()\"\n          class=\"px-4 py-2 text-sm font-mono font-bold rounded border-2 hover:opacity-90 disabled:opacity-50 disabled:cursor-not-allowed transition-opacity\"\n          style=\"background: #333; color: #FFD93D; border-color: #666;\">\n          @if (isGeneratingDiff()) {\n            <span class=\"animate-spin\">⟳</span>\n            <span class=\"ml-2\">VIEW --generating</span>\n          } @else {\n            <span class=\"flex items-center gap-2\">\n              <span>📄</span>\n              <span>VIEW --diff</span>\n            </span>\n          }\n        </button>\n        <button \n          (click)=\"applySelection()\"\n          [disabled]=\"!hasValidSelection()\"\n          class=\"px-6 py-2 text-sm font-mono font-bold rounded border-2 hover:opacity-90 disabled:opacity-50 disabled:cursor-not-allowed transition-opacity\"\n          [ngStyle]=\"hasValidSelection() ? \n            {'background': '#6BCF7F', 'color': '#000', 'border-color': '#6BCF7F'} : \n            {'background': '#333', 'color': '#666', 'border-color': '#555'}\">\n          <span class=\"flex items-center gap-2\">\n            <span>✓</span>\n            <span>APPLY --selection</span>\n          </span>\n        </button>\n      </div>\n\n      <!-- Terminal Git Diff Display -->\n      @if (showDiffDisplay()) {\n        <div class=\"mt-8 border-t pt-8\" style=\"border-color: #333;\">\n          <div class=\"flex items-center justify-between mb-6\">\n            <div class=\"flex items-center gap-3\">\n              <span style=\"color: #A8A8FF;\">></span>\n              <span style=\"color: #4ECDC4;\">📄 Git diff output</span>\n            </div>\n            \n            <div class=\"flex items-center gap-3\">\n              @if (isGeneratingDiff()) {\n                <div class=\"flex items-center gap-2\">\n                  <span class=\"text-sm animate-spin\" style=\"color: #FFD93D;\">⟳</span>\n                  <span class=\"text-sm\" style=\"color: #FFD93D;\">Generating diff...</span>\n                </div>\n              } @else if (diffDisplayData()?.status === 'complete') {\n                <span class=\"text-sm flex items-center gap-1\" style=\"color: #6BCF7F;\">\n                  <span>[✓]</span>\n                  <span>Diff completed at {{ diffDisplayData()?.timestamp | date:'short' }}</span>\n                </span>\n              } @else if (diffDisplayData()?.status === 'error') {\n                <span class=\"text-sm flex items-center gap-1\" style=\"color: #FF4B6D;\">\n                  <span>[✗]</span>\n                  <span>Error generating diff</span>\n                </span>\n              }\n              \n              <button\n                (click)=\"closeDiffDisplay()\"\n                class=\"px-2 py-1 text-xs rounded font-mono hover:opacity-80 transition-opacity\"\n                style=\"background: #333; color: #FF8C42; border: 1px solid #666;\">\n                × close\n              </button>\n            </div>\n          </div>\n\n          <!-- Terminal Diff Action Buttons -->\n          <div class=\"flex items-center gap-3 mb-6 pl-6\">\n            <button\n              (click)=\"rerunDiff()\"\n              [disabled]=\"isGeneratingDiff()\"\n              class=\"px-3 py-1 text-xs font-mono rounded border hover:opacity-80 disabled:opacity-50 disabled:cursor-not-allowed transition-opacity\"\n              style=\"background: #333; color: #4ECDC4; border-color: #666;\">\n              <span class=\"flex items-center gap-2\">\n                <span>🔄</span>\n                @if (isGeneratingDiff()) {\n                  <span>rerun --running</span>\n                } @else {\n                  <span>rerun --diff</span>\n                }\n              </span>\n            </button>\n\n            @if (diffDisplayData()?.filePath) {\n              <button\n                (click)=\"openDiffFile()\"\n                class=\"px-3 py-1 text-xs font-mono rounded border hover:opacity-80 transition-opacity\"\n                style=\"background: #333; color: #FFD93D; border-color: #666;\">\n                <span class=\"flex items-center gap-2\">\n                  <span>📁</span>\n                  <span>open --file</span>\n                </span>\n              </button>\n            }\n\n            <button\n              (click)=\"copyDiffToClipboard()\"\n              [disabled]=\"!diffDisplayData()?.content || diffDisplayData()?.status !== 'complete'\"\n              class=\"px-3 py-1 text-xs font-mono rounded border hover:opacity-80 disabled:opacity-50 disabled:cursor-not-allowed transition-opacity\"\n              style=\"background: #333; color: #A8A8FF; border-color: #666;\">\n              <span class=\"flex items-center gap-2\">\n                <span>📋</span>\n                <span>copy --clipboard</span>\n              </span>\n            </button>\n\n            @if (diffDisplayData()?.filePath) {\n              <button\n                (click)=\"deleteDiffFile()\"\n                [disabled]=\"isGeneratingDiff()\"\n                class=\"px-3 py-1 text-xs font-mono rounded border hover:opacity-80 disabled:opacity-50 disabled:cursor-not-allowed transition-opacity\"\n                style=\"background: #2a1a1a; color: #FF4B6D; border-color: #FF4B6D;\">\n                <span class=\"flex items-center gap-2\">\n                  <span>🗑️</span>\n                  <span>delete --file</span>\n                </span>\n              </button>\n            }\n\n            <button\n              (click)=\"cleanupAllDiffFiles()\"\n              [disabled]=\"isGeneratingDiff()\"\n              class=\"px-3 py-1 text-xs font-mono rounded border hover:opacity-80 disabled:opacity-50 disabled:cursor-not-allowed transition-opacity\"\n              style=\"background: #2a2a1a; color: #FF8C42; border-color: #FF8C42;\">\n              <span class=\"flex items-center gap-2\">\n                <span>🧹</span>\n                <span>cleanup --all</span>\n              </span>\n            </button>\n          </div>\n\n          <!-- Terminal Error Display -->\n          @if (diffDisplayData()?.status === 'error' && diffDisplayData()?.error) {\n            <div class=\"mb-6 p-4 rounded font-mono\" style=\"background: #2a1a1a; border: 1px solid #FF4B6D;\">\n              <div class=\"flex items-center gap-3 mb-3\">\n                <span style=\"color: #FF4B6D;\">[✗]</span>\n                <span class=\"font-bold\" style=\"color: #FF4B6D;\">ERROR</span>\n                <span style=\"color: #666;\">|</span>\n                <span style=\"color: #FFD93D;\">exit_code=1</span>\n              </div>\n              <div class=\"pl-4 text-sm\" style=\"color: #FF8C42;\">\n                {{ diffDisplayData()?.error }}\n              </div>\n            </div>\n          }\n\n          <!-- Terminal Streaming Output Display -->\n          @if (streamingOutput() && isGeneratingDiff()) {\n            <div class=\"mb-6\">\n              <div class=\"flex items-center gap-3 mb-3\">\n                <span style=\"color: #A8A8FF;\">></span>\n                <span style=\"color: #4ECDC4;\">📺 Live terminal output</span>\n              </div>\n              <div class=\"rounded p-4 h-48 overflow-y-auto font-mono text-sm pl-6\" style=\"background: #0a0a0a; border: 1px solid #333; color: #e5e5e5;\">\n                <pre>{{ streamingOutput() }}</pre>\n              </div>\n            </div>\n          }\n\n          <!-- Terminal Diff Content Display -->\n          @if (diffDisplayData()?.content && diffDisplayData()?.status === 'complete') {\n            <div>\n              <div class=\"flex items-center justify-between mb-4\">\n                <div class=\"flex items-center gap-3\">\n                  <span style=\"color: #A8A8FF;\">></span>\n                  <span style=\"color: #4ECDC4;\">📄 {{ getDiffModeLabel() }} content</span>\n                </div>\n                \n                <div class=\"flex items-center gap-4 text-xs\">\n                  <label class=\"flex items-center gap-2\" style=\"color: #666;\">\n                    <input \n                      type=\"checkbox\" \n                      [checked]=\"wrapLines()\"\n                      (change)=\"wrapLines.set(!wrapLines())\"\n                      class=\"w-3 h-3\">\n                    <span>wrap --lines</span>\n                  </label>\n                  \n                  @if (diffDisplayData()?.filePath) {\n                    <span style=\"color: #666;\">\n                      <span style=\"color: #FFD93D;\">size:</span> {{ getContentSize() }}\n                    </span>\n                  }\n                </div>\n              </div>\n              \n              <div \n                class=\"rounded overflow-auto font-mono text-sm\" \n                [style.max-height.px]=\"maxDiffHeight()\"\n                style=\"background: #0a0a0a; border: 1px solid #333;\">\n                <pre \n                  [class.whitespace-pre-wrap]=\"wrapLines()\"\n                  [class.whitespace-pre]=\"!wrapLines()\"\n                  class=\"p-4\" style=\"color: #e5e5e5;\">{{ diffDisplayData()?.content }}</pre>\n              </div>\n              \n              @if (isDiffTruncated()) {\n                <div class=\"mt-3 text-center\">\n                  <button\n                    (click)=\"toggleDiffExpanded()\"\n                    class=\"px-3 py-1 text-xs font-mono rounded border hover:opacity-80 transition-opacity\"\n                    style=\"background: #333; color: #4ECDC4; border-color: #666;\">\n                    @if (isDiffExpanded()) {\n                      <span>show --less</span>\n                    } @else {\n                      <span>show --more</span>\n                    }\n                  </button>\n                </div>\n              }\n            </div>\n          }\n        </div>\n      }\n    </div>\n  `,\n  styles: [`\n    .spinner {\n      border: 2px solid var(--vscode-progressBar-background);\n      border-top: 2px solid var(--vscode-progressBar-foreground);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n      animation: spin 1s linear infinite;\n    }\n\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  `]\n})], FileSelectorComponent);\nexport { FileSelectorComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}