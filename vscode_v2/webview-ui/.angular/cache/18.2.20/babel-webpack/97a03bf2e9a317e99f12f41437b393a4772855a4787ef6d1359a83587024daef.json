{"ast":null,"code":"import { EventEmitter, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _forTrack0 = ($index, $item) => $item.type;\nconst _forTrack1 = ($index, $item) => $item.path;\nconst _forTrack2 = ($index, $item) => $item.hash;\nfunction FileSelectorComponent_For_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FileSelectorComponent_For_11_Template_button_click_0_listener() {\n      const mode_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectMode(mode_r2.type));\n    });\n    i0.ɵɵelementStart(1, \"div\", 13)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 14);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mode_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.getModeButtonClass(mode_r2.type));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(mode_r2.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mode_r2.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mode_r2.description);\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 20);\n    i0.ɵɵtext(2, \"\\uD83D\\uDCDD\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No uncommitted changes found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 21);\n    i0.ɵɵtext(6, \"Make some changes to see them here\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Conditional_7_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"input\", 23);\n    i0.ɵɵlistener(\"change\", function FileSelectorComponent_Conditional_12_Conditional_7_For_2_Template_input_change_1_listener() {\n      const file_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.toggleFileSelection(file_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", file_r6.selected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r6.path, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r2.getStatusBadgeClass(file_r6.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", file_r6.status.toUpperCase(), \" \");\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵrepeaterCreate(1, FileSelectorComponent_Conditional_12_Conditional_7_For_2_Template, 6, 5, \"div\", 22, _forTrack1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r2.uncommittedFiles());\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 15)(2, \"h4\", 16);\n    i0.ɵɵtext(3, \"Uncommitted Changes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function FileSelectorComponent_Conditional_12_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleSelectAll());\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, FileSelectorComponent_Conditional_12_Conditional_6_Template, 7, 0, \"div\", 18)(7, FileSelectorComponent_Conditional_12_Conditional_7_Template, 3, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.areAllSelected() ? \"Unselect All\" : \"Select All\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r2.uncommittedFiles().length === 0 ? 6 : 7);\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_5_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1, \"Try a different search term\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 20);\n    i0.ɵɵtext(2, \"\\uD83D\\uDD0D\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No commits found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FileSelectorComponent_Conditional_13_Conditional_5_Conditional_5_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵconditional(ctx_r2.commitSearch ? 5 : -1);\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_6_For_2_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const commit_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", commit_r9.files.length, \" file(s)\");\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_6_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵlistener(\"click\", function FileSelectorComponent_Conditional_13_Conditional_6_For_2_Template_div_click_0_listener() {\n      const commit_r9 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.selectCommit(commit_r9));\n    });\n    i0.ɵɵelementStart(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 32)(5, \"div\", 33);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 34)(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, FileSelectorComponent_Conditional_13_Conditional_6_For_2_Conditional_12_Template, 2, 1, \"span\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    let tmp_12_0;\n    const commit_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"bg-vscode-list-activeSelectionBackground\", ((tmp_12_0 = ctx_r2.selectedCommit()) == null ? null : tmp_12_0.hash) === commit_r9.hash);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", commit_r9.hash.substring(0, 7), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", commit_r9.message, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(commit_r9.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.formatDate(commit_r9.date));\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(commit_r9.files.length > 0 ? 12 : -1);\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵrepeaterCreate(1, FileSelectorComponent_Conditional_13_Conditional_6_For_2_Template, 13, 7, \"div\", 28, _forTrack2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r2.filteredCommits());\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h4\", 16);\n    i0.ɵɵtext(2, \"Select Commit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 26)(4, \"input\", 27);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function FileSelectorComponent_Conditional_13_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.commitSearch, $event) || (ctx_r2.commitSearch = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"input\", function FileSelectorComponent_Conditional_13_Template_input_input_4_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.filterCommits());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, FileSelectorComponent_Conditional_13_Conditional_5_Template, 6, 1, \"div\", 18)(6, FileSelectorComponent_Conditional_13_Conditional_6_Template, 3, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.commitSearch);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r2.filteredCommits().length === 0 ? 5 : 6);\n  }\n}\nfunction FileSelectorComponent_Conditional_14_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"span\", 41)(2, \"span\", 42);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" files changed \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 43);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 44);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.branchDiffStats().filesChanged);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" +\", ctx_r2.branchDiffStats().additions, \" additions \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" -\", ctx_r2.branchDiffStats().deletions, \" deletions \");\n  }\n}\nfunction FileSelectorComponent_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h4\", 16);\n    i0.ɵɵtext(2, \"Branch to Main Diff\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 35)(4, \"div\", 36)(5, \"span\", 37);\n    i0.ɵɵtext(6, \"\\uD83C\\uDF3F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\")(8, \"p\", 38);\n    i0.ɵɵtext(9, \" Comparing current branch to main \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 39);\n    i0.ɵɵtext(11, \" All changes from your branch will be included \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, FileSelectorComponent_Conditional_14_Conditional_12_Template, 9, 3, \"div\", 40);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵconditional(ctx_r2.branchDiffStats() ? 12 : -1);\n  }\n}\nexport let FileSelectorComponent = /*#__PURE__*/(() => {\n  class FileSelectorComponent {\n    constructor() {\n      this.selectionChanged = new EventEmitter();\n      this.selectionModes = [{\n        type: 'uncommitted',\n        label: 'Uncommitted',\n        icon: '📝',\n        description: 'Changes not yet committed'\n      }, {\n        type: 'commit',\n        label: 'Previous Commit',\n        icon: '📚',\n        description: 'Select from git history'\n      }, {\n        type: 'branch-diff',\n        label: 'Branch Diff',\n        icon: '🌿',\n        description: 'All changes from current branch'\n      }];\n      this.currentMode = signal('uncommitted');\n      this.uncommittedFiles = signal([]);\n      this.commits = signal([]);\n      this.filteredCommits = signal([]);\n      this.selectedCommit = signal(null);\n      this.branchDiffStats = signal(null);\n      this.commitSearch = '';\n    }\n    ngOnInit() {\n      this.loadInitialData();\n    }\n    selectMode(mode) {\n      this.currentMode.set(mode);\n      this.emitSelection();\n    }\n    getModeButtonClass(mode) {\n      const baseClass = 'border transition-all duration-200';\n      if (this.currentMode() === mode) {\n        return `${baseClass} bg-vscode-button-background text-vscode-button-foreground border-vscode-button-background`;\n      }\n      return `${baseClass} bg-vscode-button-secondaryBackground text-vscode-button-secondaryForeground border-vscode-panel-border hover:bg-vscode-list-hoverBackground`;\n    }\n    getStatusBadgeClass(status) {\n      switch (status) {\n        case 'added':\n          return 'bg-green-100 text-green-800 border border-green-200';\n        case 'modified':\n          return 'bg-blue-100 text-blue-800 border border-blue-200';\n        case 'deleted':\n          return 'bg-red-100 text-red-800 border border-red-200';\n        default:\n          return 'bg-gray-100 text-gray-800 border border-gray-200';\n      }\n    }\n    toggleFileSelection(file) {\n      const files = this.uncommittedFiles();\n      const index = files.findIndex(f => f.path === file.path);\n      if (index !== -1) {\n        files[index].selected = !files[index].selected;\n        this.uncommittedFiles.set([...files]);\n        this.emitSelection();\n      }\n    }\n    toggleSelectAll() {\n      const files = this.uncommittedFiles();\n      const allSelected = this.areAllSelected();\n      files.forEach(f => f.selected = !allSelected);\n      this.uncommittedFiles.set([...files]);\n      this.emitSelection();\n    }\n    areAllSelected() {\n      const files = this.uncommittedFiles();\n      return files.length > 0 && files.every(f => f.selected);\n    }\n    selectCommit(commit) {\n      this.selectedCommit.set(commit);\n      this.emitSelection();\n    }\n    filterCommits() {\n      const search = this.commitSearch.toLowerCase();\n      const filtered = this.commits().filter(commit => commit.message.toLowerCase().includes(search) || commit.hash.toLowerCase().includes(search) || commit.author.toLowerCase().includes(search));\n      this.filteredCommits.set(filtered);\n    }\n    formatDate(date) {\n      return new Intl.RelativeTimeFormat('en', {\n        numeric: 'auto'\n      }).format(Math.floor((date.getTime() - Date.now()) / (1000 * 60 * 60 * 24)), 'day');\n    }\n    hasValidSelection() {\n      switch (this.currentMode()) {\n        case 'uncommitted':\n          return this.uncommittedFiles().some(f => f.selected);\n        case 'commit':\n          return this.selectedCommit() !== null;\n        case 'branch-diff':\n          return this.branchDiffStats() !== null;\n        default:\n          return false;\n      }\n    }\n    getSelectionSummary() {\n      switch (this.currentMode()) {\n        case 'uncommitted':\n          const selected = this.uncommittedFiles().filter(f => f.selected).length;\n          const total = this.uncommittedFiles().length;\n          return `${selected}/${total} files selected`;\n        case 'commit':\n          return this.selectedCommit() ? `Commit ${this.selectedCommit().hash.substring(0, 7)} selected` : 'No commit selected';\n        case 'branch-diff':\n          return this.branchDiffStats() ? `${this.branchDiffStats().filesChanged} files in diff` : 'Loading diff...';\n        default:\n          return '';\n      }\n    }\n    refreshData() {\n      this.loadInitialData();\n    }\n    applySelection() {\n      this.emitSelection();\n    }\n    loadInitialData() {\n      // Mock data for now - will be replaced with actual VSCode integration\n      this.uncommittedFiles.set([{\n        path: 'src/app/components/test.component.ts',\n        status: 'modified',\n        selected: false\n      }, {\n        path: 'src/app/services/data.service.ts',\n        status: 'added',\n        selected: false\n      }, {\n        path: 'src/app/models/user.model.ts',\n        status: 'deleted',\n        selected: false\n      }]);\n      this.commits.set([{\n        hash: 'abc123def456',\n        message: 'Add new user authentication feature',\n        author: 'John Doe',\n        date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\n        files: ['auth.service.ts', 'user.component.ts']\n      }, {\n        hash: 'def456ghi789',\n        message: 'Fix bug in data processing',\n        author: 'Jane Smith',\n        date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\n        files: ['data.service.ts']\n      }]);\n      this.filteredCommits.set(this.commits());\n      this.branchDiffStats.set({\n        filesChanged: 7,\n        additions: 142,\n        deletions: 28\n      });\n    }\n    emitSelection() {\n      const selection = {\n        mode: this.currentMode(),\n        files: this.currentMode() === 'uncommitted' ? this.uncommittedFiles().filter(f => f.selected) : [],\n        commit: this.currentMode() === 'commit' ? this.selectedCommit() || undefined : undefined,\n        diff: this.getCurrentDiff()\n      };\n      this.selectionChanged.emit(selection);\n    }\n    getCurrentDiff() {\n      // Mock diff - will be replaced with actual git integration\n      switch (this.currentMode()) {\n        case 'uncommitted':\n          return 'diff --git a/src/app/test.ts b/src/app/test.ts\\n+added line\\n-removed line';\n        case 'commit':\n          return this.selectedCommit() ? `Diff for commit ${this.selectedCommit().hash}` : '';\n        case 'branch-diff':\n          return 'Full branch diff content...';\n        default:\n          return '';\n      }\n    }\n    static {\n      this.ɵfac = function FileSelectorComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FileSelectorComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FileSelectorComponent,\n        selectors: [[\"app-file-selector\"]],\n        outputs: {\n          selectionChanged: \"selectionChanged\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 20,\n        vars: 5,\n        consts: [[1, \"bg-vscode-editor-background\", \"p-4\", \"rounded-lg\", \"border\", \"border-vscode-panel-border\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mb-6\"], [1, \"text-vscode-foreground\", \"text-lg\", \"font-semibold\"], [1, \"text-vscode-descriptionForeground\", \"text-sm\"], [1, \"mb-6\"], [1, \"text-vscode-foreground\", \"text-sm\", \"font-medium\", \"mb-3\", \"block\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-3\", \"gap-3\"], [1, \"px-4\", \"py-3\", \"rounded\", \"text-sm\", \"font-medium\", \"transition-colors\", 3, \"class\"], [1, \"space-y-3\"], [1, \"mt-6\", \"flex\", \"gap-3\", \"justify-end\"], [1, \"px-4\", \"py-2\", \"text-sm\", \"bg-vscode-button-secondaryBackground\", \"text-vscode-button-secondaryForeground\", \"rounded\", \"hover:bg-vscode-button-secondaryHoverBackground\", 3, \"click\"], [1, \"px-4\", \"py-2\", \"text-sm\", \"bg-vscode-button-background\", \"text-vscode-button-foreground\", \"rounded\", \"hover:bg-vscode-button-hoverBackground\", \"disabled:opacity-50\", \"disabled:cursor-not-allowed\", 3, \"click\", \"disabled\"], [1, \"px-4\", \"py-3\", \"rounded\", \"text-sm\", \"font-medium\", \"transition-colors\", 3, \"click\"], [1, \"flex\", \"items-center\", \"gap-2\"], [1, \"text-xs\", \"opacity-75\", \"mt-1\"], [1, \"flex\", \"items-center\", \"justify-between\"], [1, \"text-vscode-foreground\", \"font-medium\"], [1, \"text-vscode-button-background\", \"hover:text-vscode-button-hoverBackground\", \"text-sm\", 3, \"click\"], [1, \"text-vscode-descriptionForeground\", \"text-center\", \"py-8\"], [1, \"space-y-2\", \"max-h-64\", \"overflow-y-auto\", \"border\", \"border-vscode-panel-border\", \"rounded\", \"p-2\"], [1, \"text-4xl\", \"mb-2\"], [1, \"text-xs\"], [1, \"flex\", \"items-center\", \"gap-3\", \"p-2\", \"rounded\", \"hover:bg-vscode-list-hoverBackground\"], [\"type\", \"checkbox\", 1, \"w-4\", \"h-4\", \"rounded\", \"border-vscode-checkbox-border\", \"bg-vscode-checkbox-background\", 3, \"change\", \"checked\"], [1, \"flex-1\", \"text-vscode-foreground\", \"text-sm\", \"font-mono\", \"truncate\"], [1, \"px-2\", \"py-1\", \"text-xs\", \"rounded\", \"font-medium\"], [1, \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Search commits by message or hash...\", 1, \"w-full\", \"px-3\", \"py-2\", \"bg-vscode-input-background\", \"text-vscode-input-foreground\", \"border\", \"border-vscode-input-border\", \"rounded\", \"focus:border-vscode-inputOption-activeBorder\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"p-3\", \"rounded\", \"hover:bg-vscode-list-hoverBackground\", \"cursor-pointer\", \"transition-colors\", 3, \"bg-vscode-list-activeSelectionBackground\"], [1, \"p-3\", \"rounded\", \"hover:bg-vscode-list-hoverBackground\", \"cursor-pointer\", \"transition-colors\", 3, \"click\"], [1, \"flex\", \"items-start\", \"gap-3\"], [1, \"text-vscode-descriptionForeground\", \"text-xs\", \"font-mono\", \"mt-1\"], [1, \"flex-1\", \"min-w-0\"], [1, \"text-vscode-foreground\", \"text-sm\", \"font-medium\", \"truncate\"], [1, \"text-vscode-descriptionForeground\", \"text-xs\", \"mt-1\", \"flex\", \"items-center\", \"gap-4\"], [1, \"bg-vscode-textBlockQuote-background\", \"border\", \"border-vscode-panel-border\", \"rounded\", \"p-4\"], [1, \"flex\", \"items-center\", \"gap-2\", \"mb-3\"], [1, \"text-2xl\"], [1, \"text-vscode-textBlockQuote-foreground\", \"text-sm\", \"font-medium\"], [1, \"text-vscode-descriptionForeground\", \"text-xs\"], [1, \"flex\", \"flex-wrap\", \"gap-4\", \"text-xs\"], [1, \"text-vscode-foreground\"], [1, \"font-semibold\"], [1, \"text-vscode-gitDecoration-addedResourceForeground\"], [1, \"text-vscode-gitDecoration-deletedResourceForeground\"]],\n        template: function FileSelectorComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n            i0.ɵɵtext(3, \"File Selection\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 3);\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n            i0.ɵɵtext(8, \" Select Changes From: \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 6);\n            i0.ɵɵrepeaterCreate(10, FileSelectorComponent_For_11_Template, 8, 5, \"button\", 7, _forTrack0);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(12, FileSelectorComponent_Conditional_12_Template, 8, 2, \"div\", 8)(13, FileSelectorComponent_Conditional_13_Template, 7, 2, \"div\", 8)(14, FileSelectorComponent_Conditional_14_Template, 13, 1, \"div\", 8);\n            i0.ɵɵelementStart(15, \"div\", 9)(16, \"button\", 10);\n            i0.ɵɵlistener(\"click\", function FileSelectorComponent_Template_button_click_16_listener() {\n              return ctx.refreshData();\n            });\n            i0.ɵɵtext(17, \" \\uD83D\\uDD04 Refresh \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function FileSelectorComponent_Template_button_click_18_listener() {\n              return ctx.applySelection();\n            });\n            i0.ɵɵtext(19, \" Apply Selection \");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" \", ctx.getSelectionSummary(), \" \");\n            i0.ɵɵadvance(5);\n            i0.ɵɵrepeater(ctx.selectionModes);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx.currentMode() === \"uncommitted\" ? 12 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.currentMode() === \"commit\" ? 13 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.currentMode() === \"branch-diff\" ? 14 : -1);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", !ctx.hasValidSelection());\n          }\n        },\n        dependencies: [CommonModule, FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return FileSelectorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}