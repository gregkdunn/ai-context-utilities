{
  "name": "ai-debug-utilities",
  "displayName": "AI Debug Utilities",
  "description": "AI-powered debugging and code quality tools for Angular NX monorepos",
  "version": "0.1.0",
  "publisher": "your-publisher-name",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Testing",
    "Debuggers",
    "Other"
  ],
  "keywords": [
    "nx",
    "angular",
    "testing",
    "jest",
    "ai",
    "debugging",
    "copilot"
  ],
  "activationEvents": [
    "workspaceContains:**/nx.json",
    "workspaceContains:**/angular.json"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "aiDebugUtilities.openPanel",
        "title": "Open AI Debug Panel",
        "category": "AI Debug"
      },
      {
        "command": "aiDebugUtilities.runAiDebug",
        "title": "Run AI Debug Analysis",
        "category": "AI Debug"
      },
      {
        "command": "aiDebugUtilities.runNxTest",
        "title": "Run NX Tests (AI Optimized)",
        "category": "AI Debug"
      },
      {
        "command": "aiDebugUtilities.runGitDiff",
        "title": "Analyze Git Changes",
        "category": "AI Debug"
      },
      {
        "command": "aiDebugUtilities.runPrepareToPush",
        "title": "Prepare to Push (Lint + Format)",
        "category": "AI Debug"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "aiDebugUtilities",
          "name": "AI Debug Assistant",
          "icon": "resources/ai-debug-icon.svg",
          "when": "workspaceHasNxProject"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "aiDebugUtilities",
          "title": "AI Debug Utilities",
          "icon": "resources/ai-debug-icon.svg"
        }
      ]
    },
    "configuration": {
      "title": "AI Debug Utilities",
      "properties": {
        "aiDebugUtilities.outputDirectory": {
          "type": "string",
          "default": ".github/instructions/ai_utilities_context",
          "description": "Directory where AI debug output files are saved"
        },
        "aiDebugUtilities.autoDetectProject": {
          "type": "boolean",
          "default": true,
          "description": "Automatically detect the current NX project"
        },
        "aiDebugUtilities.showNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Show notifications when commands complete"
        },
        "aiDebugUtilities.terminalIntegration": {
          "type": "boolean",
          "default": true,
          "description": "Show command output in integrated terminal"
        },
        "aiDebugUtilities.copilot.autoAnalyze": {
          "type": "boolean",
          "default": true,
          "description": "Automatically trigger Copilot analysis when tests fail"
        },
        "aiDebugUtilities.copilot.analyzeOnFailure": {
          "type": "boolean",
          "default": true,
          "description": "Auto-analyze with Copilot when tests fail"
        },
        "aiDebugUtilities.copilot.generatePR": {
          "type": "boolean",
          "default": true,
          "description": "Enable PR description generation with Copilot"
        },
        "aiDebugUtilities.autoBackup": {
          "type": "boolean",
          "default": false,
          "description": "Automatically create backups before file operations"
        },
        "aiDebugUtilities.maxRetries": {
          "type": "number",
          "default": 2,
          "description": "Maximum number of retries for failed file operations"
        },
        "aiDebugUtilities.validateContent": {
          "type": "boolean",
          "default": true,
          "description": "Validate file content based on output type"
        },
        "aiDebugUtilities.showDetailedNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Show detailed notifications with operation summaries"
        },
        "aiDebugUtilities.backupRetentionDays": {
          "type": "number",
          "default": 7,
          "description": "Number of days to retain backup files"
        }
      }
    },
    "keybindings": [
      {
        "command": "aiDebugUtilities.openPanel",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "workspaceHasNxProject"
      },
      {
        "command": "aiDebugUtilities.runAiDebug",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a",
        "when": "workspaceHasNxProject"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "aiDebugUtilities.runAiDebug",
          "when": "resourceExtname == .ts || resourceExtname == .spec.ts",
          "group": "aiDebug@1"
        }
      ],
      "commandPalette": [
        {
          "command": "aiDebugUtilities.openPanel",
          "when": "workspaceHasNxProject"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run build:angular",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:commands": "jest --testPathPattern=src/commands/__tests__",
    "test:integration": "jest --testPathPattern=integration.test.ts",
    "test:unit": "jest --testPathPattern=src/commands/__tests__ --testPathIgnorePatterns=integration.test.ts",
    "test:streaming": "jest --testPathPattern=streaming",
    "test:webview": "jest --testPathPattern=src/webview/__tests__",
    "test:utils": "jest --testPathPattern=src/utils/__tests__",
    "test:filemanager": "jest --testPathPattern=fileManager",
    "test:enhanced": "jest --testPathPattern=enhanced",
    "test:batch": "jest --testPathPattern=batch",
    "test:angular": "cd angular-app && npm test",
    "test:angular:coverage": "cd angular-app && npm run test:coverage",
    "build:angular": "node scripts/build-angular.js",
    "build:angular:watch": "cd angular-app && npm run watch",
    "dev:angular": "cd angular-app && npm start",
    "package": "npm run build:angular && vsce package",
    "deploy": "npm run build:angular && vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.85.0",
    "@types/node": "18.x",
    "@types/jest": "^29.5.8",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.54.0",
    "typescript": "^5.3.2",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^2.22.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1"
  },
  "dependencies": {
    "chokidar": "^3.5.3"
  }
}
