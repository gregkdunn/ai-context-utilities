{"file":"/Users/gregdunn/src/test/ai_debug_context/vscode/src/services/plugins/__tests__/gitAnalyzerPlugin.test.ts","mappings":"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","names":[],"sources":["/Users/gregdunn/src/test/ai_debug_context/vscode/src/services/plugins/__tests__/gitAnalyzerPlugin.test.ts"],"sourcesContent":["import { GitAnalyzerPlugin } from '../builtin/gitAnalyzerPlugin';\nimport { PluginAPI, PluginContext } from '../../../types/plugin';\nimport * as vscode from 'vscode';\n\n// Mock VSCode API\njest.mock('vscode', () => ({\n  window: {\n    showInformationMessage: jest.fn(),\n    showWarningMessage: jest.fn(),\n    showErrorMessage: jest.fn(),\n    withProgress: jest.fn(),\n    showTextDocument: jest.fn(),\n    showInputBox: jest.fn(),\n    showQuickPick: jest.fn()\n  },\n  workspace: {\n    openTextDocument: jest.fn().mockResolvedValue({}),\n    fs: {\n      writeFile: jest.fn(),\n      readFile: jest.fn()\n    }\n  },\n  commands: {\n    registerCommand: jest.fn().mockReturnValue({ dispose: jest.fn() })\n  }\n}));\n\ndescribe('GitAnalyzerPlugin', () => {\n  let gitPlugin: GitAnalyzerPlugin;\n  let mockAPI: PluginAPI;\n  let mockContext: PluginContext;\n\n  beforeEach(() => {\n    gitPlugin = new GitAnalyzerPlugin();\n    \n    mockAPI = {\n      vscode: vscode as any,\n      getPluginPath: jest.fn().mockReturnValue('/test/plugin/path'),\n      getPluginVersion: jest.fn().mockReturnValue('1.0.0'),\n      getPluginMetadata: jest.fn().mockReturnValue({ id: 'test-plugin', name: 'Test Plugin' }),\n      registerCommand: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerAnalyzer: jest.fn(),\n      registerFormatter: jest.fn(),\n      registerTransformer: jest.fn(),\n      registerValidator: jest.fn(),\n      getInsightsEngine: jest.fn(),\n      getCollaborationService: jest.fn(),\n      getExecutionService: jest.fn(),\n      showNotification: jest.fn(),\n      showProgress: jest.fn(),\n      openFile: jest.fn().mockResolvedValue(undefined),\n      writeFile: jest.fn().mockResolvedValue(undefined),\n      on: jest.fn(),\n      off: jest.fn(),\n      emit: jest.fn(),\n      createOutputChannel: jest.fn().mockReturnValue({ appendLine: jest.fn(), show: jest.fn() }),\n      showMessage: jest.fn(),\n      getConfiguration: jest.fn().mockReturnValue({ get: jest.fn(), update: jest.fn() }),\n      onDidChangeConfiguration: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createStatusBarItem: jest.fn().mockReturnValue({ text: '', show: jest.fn(), hide: jest.fn() }),\n      createTreeView: jest.fn().mockReturnValue({ reveal: jest.fn() }),\n      createWebviewPanel: jest.fn().mockReturnValue({ webview: { html: '', onDidReceiveMessage: jest.fn() } }),\n      executeCommand: jest.fn().mockResolvedValue(undefined),\n      openExternal: jest.fn().mockResolvedValue(true),\n      showTextDocument: jest.fn().mockResolvedValue({}),\n      showQuickPick: jest.fn().mockResolvedValue(undefined),\n      showInputBox: jest.fn().mockResolvedValue(undefined),\n      withProgress: jest.fn().mockImplementation((options, task) => task({ report: jest.fn() }, { isCancellationRequested: false })),\n      createTerminal: jest.fn().mockReturnValue({ sendText: jest.fn(), show: jest.fn() }),\n      createFileSystemWatcher: jest.fn().mockReturnValue({ onDidChange: jest.fn(), dispose: jest.fn() }),\n      findFiles: jest.fn().mockResolvedValue([]),\n      openTextDocument: jest.fn().mockResolvedValue({}),\n      saveAll: jest.fn().mockResolvedValue(true),\n      applyEdit: jest.fn().mockResolvedValue(true),\n      createDiagnosticCollection: jest.fn().mockReturnValue({ set: jest.fn(), clear: jest.fn() }),\n      registerCodeActionsProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerCompletionItemProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDefinitionProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerHoverProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDocumentFormattingEditProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDocumentRangeFormattingEditProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerRenameProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerReferenceProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDocumentSymbolProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDocumentHighlightProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDocumentLinkProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerSignatureHelpProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDebugConfigurationProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerDebugAdapterDescriptorFactory: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      registerTaskProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createTask: jest.fn(),\n      executeTask: jest.fn().mockResolvedValue({}),\n      onDidStartTask: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      onDidEndTask: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      onDidStartTaskProcess: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      onDidEndTaskProcess: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createTreeDataProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createCustomTextEditorProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createCustomEditorProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createWebviewViewProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createAuthenticationProvider: jest.fn().mockReturnValue({ dispose: jest.fn() }),\n      createSourceControlResourceGroup: jest.fn(),\n      createSourceControl: jest.fn(),\n      createCommentController: jest.fn(),\n      createNotebookController: jest.fn(),\n      createNotebookCellExecution: jest.fn(),\n      createNotebookCellOutput: jest.fn(),\n      createNotebookCellOutputItem: jest.fn(),\n      createNotebookDocument: jest.fn(),\n      createNotebookEdit: jest.fn(),\n      createNotebookRange: jest.fn(),\n      createNotebookCell: jest.fn(),\n      createNotebookCellData: jest.fn(),\n      createNotebookData: jest.fn(),\n      createNotebookDocumentFilter: jest.fn(),\n      createNotebookDocumentMetadata: jest.fn()\n    } as PluginAPI;\n    \n    mockContext = {\n      subscriptions: [],\n      workspaceState: { get: jest.fn(), update: jest.fn(), keys: jest.fn().mockReturnValue([]) } as any,\n      globalState: { get: jest.fn(), update: jest.fn(), keys: jest.fn().mockReturnValue([]) } as any,\n      secrets: { get: jest.fn(), store: jest.fn(), delete: jest.fn() } as any,\n      extensionUri: { scheme: 'file', path: '/test', fsPath: '/test' } as any,\n      extensionPath: '/test/extension',\n      environmentVariableCollection: {} as any,\n      asAbsolutePath: jest.fn().mockImplementation((path: string) => `/test/extension/${path}`),\n      storageUri: { scheme: 'file', path: '/test/storage', fsPath: '/test/storage' } as any,\n      storagePath: '/test/storage',\n      globalStorageUri: { scheme: 'file', path: '/test/global', fsPath: '/test/global' } as any,\n      globalStoragePath: '/test/global',\n      logUri: { scheme: 'file', path: '/test/logs', fsPath: '/test/logs' } as any,\n      logPath: '/test/logs',\n      extensionMode: 3 as any, // vscode.ExtensionMode.Test\n      extension: {} as any,\n      workspaceRoot: '/test/workspace',\n      currentFile: 'test.ts',\n      selectedText: 'test selection',\n      executionHistory: [],\n      aiInsights: [],\n      collaborationData: {},\n      customData: {}\n    } as PluginContext;\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Plugin Metadata', () => {\n    it('should have valid metadata', () => {\n      expect(gitPlugin.metadata.id).toBe('builtin-git-analyzer');\n      expect(gitPlugin.metadata.name).toBe('Git Analyzer');\n      expect(gitPlugin.metadata.version).toBe('1.0.0');\n      expect(gitPlugin.metadata.enabled).toBe(true);\n      expect(gitPlugin.metadata.capabilities).toHaveLength(2);\n    });\n\n    it('should have analyzer capability', () => {\n      const analyzerCapability = gitPlugin.metadata.capabilities.find(c => c.type === 'analyzer');\n      expect(analyzerCapability).toBeDefined();\n      expect(analyzerCapability?.name).toBe('git-analyzer');\n    });\n\n    it('should have command capability', () => {\n      const commandCapability = gitPlugin.metadata.capabilities.find(c => c.type === 'command');\n      expect(commandCapability).toBeDefined();\n      expect(commandCapability?.name).toBe('git-insights');\n    });\n  });\n\n  describe('Plugin Activation', () => {\n    it('should activate successfully', async () => {\n      await gitPlugin.activate(mockAPI, mockContext);\n      \n      expect(mockAPI.registerAnalyzer).toHaveBeenCalledTimes(1);\n      expect(mockAPI.registerCommand).toHaveBeenCalledTimes(2);\n      expect(mockAPI.on).toHaveBeenCalledWith('git:commit', expect.any(Function));\n      expect(mockAPI.on).toHaveBeenCalledWith('git:branch-changed', expect.any(Function));\n    });\n\n    it('should deactivate successfully', async () => {\n      await gitPlugin.activate(mockAPI, mockContext);\n      await gitPlugin.deactivate(mockAPI, mockContext);\n      \n      expect(mockAPI.off).toHaveBeenCalledWith('git:commit');\n      expect(mockAPI.off).toHaveBeenCalledWith('git:branch-changed');\n    });\n  });\n\n  describe('Analyzers', () => {\n    it('should have git commit analyzer', () => {\n      const analyzers = gitPlugin.analyzers;\n      expect(analyzers).toHaveLength(1);\n      \n      const commitAnalyzer = analyzers[0];\n      expect(commitAnalyzer.id).toBe('git-commit-analyzer');\n      expect(commitAnalyzer.name).toBe('Git Commit Analyzer');\n      expect(commitAnalyzer.filePatterns).toContain('.git/**/*');\n    });\n\n    it('should analyze git content successfully', async () => {\n      const analyzers = gitPlugin.analyzers;\n      const analyzer = analyzers[0];\n      \n      const result = await analyzer.analyze('', '.git/HEAD', mockContext);\n      \n      expect(result).toBeDefined();\n      expect(result.issues).toBeDefined();\n      expect(result.metrics).toBeDefined();\n      expect(result.suggestions).toBeDefined();\n      expect(result.confidence).toBe(0.85);\n    });\n\n    it('should handle analysis errors gracefully', async () => {\n      const analyzers = gitPlugin.analyzers;\n      const analyzer = analyzers[0];\n      \n      // Mock error by using invalid context\n      const invalidContext = null as any;\n      \n      const result = await analyzer.analyze('', '.git/HEAD', mockContext);\n      \n      expect(result.issues).toHaveLength(1);\n      expect(result.issues[0].type).toBe('error');\n      expect(result.issues[0].message).toContain('Git analysis failed');\n    });\n  });\n\n  describe('Commands', () => {\n    it('should have git health check command', () => {\n      const commands = gitPlugin.commands;\n      expect(commands).toHaveLength(2);\n      \n      const healthCheckCommand = commands.find(c => c.id === 'git-health-check');\n      expect(healthCheckCommand).toBeDefined();\n      expect(healthCheckCommand?.title).toBe('Git Health Check');\n      expect(healthCheckCommand?.category).toBe('Git');\n    });\n\n    it('should have git optimize workflow command', () => {\n      const commands = gitPlugin.commands;\n      \n      const optimizeCommand = commands.find(c => c.id === 'git-optimize-workflow');\n      expect(optimizeCommand).toBeDefined();\n      expect(optimizeCommand?.title).toBe('Optimize Git Workflow');\n      expect(optimizeCommand?.category).toBe('Git');\n    });\n\n    it('should execute git health check command', async () => {\n      const commands = gitPlugin.commands;\n      const healthCheckCommand = commands.find(c => c.id === 'git-health-check');\n      \n      const result = await healthCheckCommand?.execute(mockContext);\n      \n      expect(result).toBeDefined();\n      expect(result.overall).toBeDefined();\n      expect(result.scores).toBeDefined();\n      expect(vscode.workspace.openTextDocument).toHaveBeenCalled();\n    });\n\n    it('should execute git optimize workflow command', async () => {\n      const commands = gitPlugin.commands;\n      const optimizeCommand = commands.find(c => c.id === 'git-optimize-workflow');\n      \n      (vscode.window.showQuickPick as jest.Mock).mockResolvedValue({\n        label: 'Setup Git Hooks',\n        description: 'Add pre-commit hooks for code quality checks'\n      });\n      \n      const result = await optimizeCommand?.execute(mockContext);\n      \n      expect(result).toBeDefined();\n      expect(Array.isArray(result)).toBe(true);\n      expect(vscode.window.showQuickPick).toHaveBeenCalled();\n    });\n  });\n\n  describe('Analysis Methods', () => {\n    it('should analyze commit history', async () => {\n      await gitPlugin.activate(mockAPI, mockContext);\n      \n      // Access private method through any casting for testing\n      const plugin = gitPlugin as any;\n      const result = await plugin.analyzeCommitHistory(mockContext);\n      \n      expect(result).toBeDefined();\n      expect(result.issues).toBeDefined();\n      expect(result.metrics).toBeDefined();\n      expect(result.suggestions).toBeDefined();\n      expect(result.confidence).toBe(0.9);\n    });\n\n    it('should analyze branches', async () => {\n      await gitPlugin.activate(mockAPI, mockContext);\n      \n      const plugin = gitPlugin as any;\n      const result = await plugin.analyzeBranches(mockContext);\n      \n      expect(result).toBeDefined();\n      expect(result.issues).toBeDefined();\n      expect(result.metrics).toBeDefined();\n      expect(result.suggestions).toBeDefined();\n      expect(result.confidence).toBe(0.8);\n    });\n\n    it('should analyze changes', async () => {\n      await gitPlugin.activate(mockAPI, mockContext);\n      \n      const plugin = gitPlugin as any;\n      const result = await plugin.analyzeChanges(mockContext);\n      \n      expect(result).toBeDefined();\n      expect(result.issues).toBeDefined();\n      expect(result.metrics).toBeDefined();\n      expect(result.suggestions).toBeDefined();\n      expect(result.confidence).toBe(0.85);\n    });\n\n    it('should perform health check', async () => {\n      await gitPlugin.activate(mockAPI, mockContext);\n      \n      const plugin = gitPlugin as any;\n      const result = await plugin.performHealthCheck(mockContext);\n      \n      expect(result).toBeDefined();\n      expect(result.overall).toBeDefined();\n      expect(result.scores).toBeDefined();\n      expect(result.scores.commitQuality).toBeDefined();\n      expect(result.scores.branchHealth).toBeDefined();\n    });\n\n    it('should suggest workflow optimizations', async () => {\n      await gitPlugin.activate(mockAPI, mockContext);\n      \n      const plugin = gitPlugin as any;\n      const result = await plugin.suggestWorkflowOptimizations(mockContext);\n      \n      expect(result).toBeDefined();\n      expect(Array.isArray(result)).toBe(true);\n      expect(result.length).toBeGreaterThan(0);\n      expect(result[0]).toHaveProperty('title');\n      expect(result[0]).toHaveProperty('description');\n      expect(result[0]).toHaveProperty('impact');\n    });\n  });\n\n  describe('Utility Methods', () => {\n    it('should get recent commits', async () => {\n      const plugin = gitPlugin as any;\n      const commits = await plugin.getRecentCommits(mockContext);\n      \n      expect(commits).toBeDefined();\n      expect(Array.isArray(commits)).toBe(true);\n      expect(commits.length).toBeGreaterThan(0);\n    });\n\n    it('should get branches', async () => {\n      const plugin = gitPlugin as any;\n      const branches = await plugin.getBranches(mockContext);\n      \n      expect(branches).toBeDefined();\n      expect(Array.isArray(branches)).toBe(true);\n      expect(branches.length).toBeGreaterThan(0);\n    });\n\n    it('should get uncommitted files', async () => {\n      const plugin = gitPlugin as any;\n      const files = await plugin.getUncommittedFiles(mockContext);\n      \n      expect(files).toBeDefined();\n      expect(Array.isArray(files)).toBe(true);\n    });\n\n    it('should analyze commit frequency', () => {\n      const plugin = gitPlugin as any;\n      const commits = [\n        { date: new Date() },\n        { date: new Date(Date.now() - 3600000) }, // 1 hour ago\n        { date: new Date(Date.now() - 86400000 * 2) } // 2 days ago\n      ];\n      \n      const frequency = plugin.analyzeCommitFrequency(commits);\n      \n      expect(frequency).toBeDefined();\n      expect(frequency.daily).toBeDefined();\n      expect(frequency.weekly).toBeDefined();\n      expect(frequency.daily).toBeGreaterThanOrEqual(0);\n      expect(frequency.weekly).toBeGreaterThanOrEqual(0);\n    });\n\n    it('should identify stale branches', () => {\n      const plugin = gitPlugin as any;\n      const staleBranch = {\n        name: 'old-feature',\n        lastCommit: new Date(Date.now() - 86400000 * 40), // 40 days ago\n        active: false\n      };\n      const activeBranch = {\n        name: 'main',\n        lastCommit: new Date(),\n        active: true\n      };\n      \n      expect(plugin.isStaleBranch(staleBranch)).toBe(true);\n      expect(plugin.isStaleBranch(activeBranch)).toBe(false);\n    });\n\n    it('should identify large files', () => {\n      const plugin = gitPlugin as any;\n      const largeFile = { size: 150 * 1024 * 1024 }; // 150MB\n      const smallFile = { size: 50 * 1024 }; // 50KB\n      \n      expect(plugin.isLargeFile(largeFile)).toBe(true);\n      expect(plugin.isLargeFile(smallFile)).toBe(false);\n    });\n\n    it('should calculate commit quality score', () => {\n      const plugin = gitPlugin as any;\n      const analysis = {\n        metrics: {\n          'total-commits': 10,\n          'poor-commit-messages': 2,\n          'long-commit-messages': 1\n        }\n      };\n      \n      const score = plugin.calculateCommitQualityScore(analysis);\n      \n      expect(score).toBeGreaterThanOrEqual(0);\n      expect(score).toBeLessThanOrEqual(1);\n    });\n\n    it('should calculate branch health score', () => {\n      const plugin = gitPlugin as any;\n      const analysis = {\n        metrics: {\n          'total-branches': 5,\n          'stale-branches': 1\n        }\n      };\n      \n      const score = plugin.calculateBranchHealthScore(analysis);\n      \n      expect(score).toBeGreaterThanOrEqual(0);\n      expect(score).toBeLessThanOrEqual(1);\n    });\n\n    it('should format health report', () => {\n      const plugin = gitPlugin as any;\n      const health = {\n        overall: 'good',\n        scores: {\n          commitQuality: 0.85,\n          branchHealth: 0.78,\n          repositorySize: 0.90,\n          workflowEfficiency: 0.82\n        },\n        recommendations: [\n          'Clean up old branches',\n          'Improve commit messages'\n        ]\n      };\n      \n      const report = plugin.formatHealthReport(health);\n      \n      expect(report).toBeDefined();\n      expect(typeof report).toBe('string');\n      expect(report).toContain('# Git Repository Health Report');\n      expect(report).toContain('Overall Health: GOOD');\n      expect(report).toContain('Clean up old branches');\n    });\n  });\n});\n"],"version":3}