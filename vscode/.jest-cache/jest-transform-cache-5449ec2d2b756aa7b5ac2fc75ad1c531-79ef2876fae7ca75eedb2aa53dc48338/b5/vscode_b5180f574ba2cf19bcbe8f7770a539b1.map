{"file":"/Users/gregdunn/src/test/ai_debug_context/vscode/src/test/__mocks__/vscode.ts","mappings":"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","names":[],"sources":["/Users/gregdunn/src/test/ai_debug_context/vscode/src/test/__mocks__/vscode.ts"],"sourcesContent":["import { EventEmitter as NodeEventEmitter } from 'events';\n\n// Mock VSCode API for testing\nconst mockStatusBarItem = {\n    show: jest.fn(),\n    hide: jest.fn(),\n    dispose: jest.fn(),\n    text: '',\n    tooltip: '',\n    command: '',\n    alignment: 1,\n    priority: 100\n};\n\nconst mockWebview = {\n    html: '',\n    options: {},\n    onDidReceiveMessage: jest.fn(),\n    postMessage: jest.fn(),\n    asWebviewUri: jest.fn().mockReturnValue({ toString: () => 'mock://uri' })\n};\n\nconst mockWebviewView = {\n    webview: mockWebview,\n    show: jest.fn(),\n    title: '',\n    description: '',\n    onDidDispose: jest.fn(),\n    onDidChangeVisibility: jest.fn()\n};\n\nconst mockDocument = {\n    uri: { fsPath: '/mock/path' },\n    getText: jest.fn().mockReturnValue('mock text'),\n    save: jest.fn(),\n    lineCount: 10\n};\n\nconst mockTerminal = {\n    sendText: jest.fn(),\n    show: jest.fn(),\n    hide: jest.fn(),\n    dispose: jest.fn(),\n    name: 'Mock Terminal'\n};\n\nexport const StatusBarAlignment = {\n    Left: 1,\n    Right: 2\n};\n\nexport const ViewColumn = {\n    Active: -1,\n    Beside: -2,\n    One: 1,\n    Two: 2,\n    Three: 3\n};\n\nexport const Uri = {\n    file: jest.fn().mockReturnValue({ toString: () => 'mock://file' }),\n    parse: jest.fn().mockReturnValue({ toString: () => 'mock://uri' }),\n    joinPath: jest.fn().mockReturnValue({ toString: () => 'mock://joined' })\n};\n\nexport const workspace = {\n    workspaceFolders: [{ uri: { fsPath: '/test/workspace' } }],\n    getConfiguration: jest.fn().mockReturnValue({\n        get: jest.fn().mockReturnValue(true),\n        update: jest.fn(),\n        has: jest.fn().mockReturnValue(true),\n        inspect: jest.fn()\n    }),\n    openTextDocument: jest.fn().mockResolvedValue(mockDocument),\n    findFiles: jest.fn().mockResolvedValue([]),\n    createFileSystemWatcher: jest.fn().mockReturnValue({\n        onDidCreate: jest.fn(),\n        onDidChange: jest.fn(),\n        onDidDelete: jest.fn(),\n        dispose: jest.fn()\n    }),\n    fs: {\n        readFile: jest.fn(),\n        writeFile: jest.fn(),\n        stat: jest.fn(),\n        readDirectory: jest.fn()\n    }\n};\n\nexport const window = {\n    createStatusBarItem: jest.fn().mockReturnValue(mockStatusBarItem),\n    registerWebviewViewProvider: jest.fn(),\n    showInformationMessage: jest.fn(),\n    showWarningMessage: jest.fn(),\n    showErrorMessage: jest.fn(),\n    showQuickPick: jest.fn(),\n    showInputBox: jest.fn(),\n    showTextDocument: jest.fn(),\n    createOutputChannel: jest.fn().mockReturnValue({\n        append: jest.fn(),\n        appendLine: jest.fn(),\n        show: jest.fn(),\n        hide: jest.fn(),\n        dispose: jest.fn()\n    }),\n    createTerminal: jest.fn().mockReturnValue(mockTerminal),\n    terminals: [],\n    activeTextEditor: null,\n    visibleTextEditors: [],\n    onDidChangeActiveTextEditor: jest.fn(),\n    onDidChangeVisibleTextEditors: jest.fn()\n};\n\nexport const commands = {\n    registerCommand: jest.fn(),\n    executeCommand: jest.fn(),\n    getCommands: jest.fn().mockResolvedValue([])\n};\n\nexport const extensions = {\n    getExtension: jest.fn().mockReturnValue({\n        isActive: true,\n        exports: {\n            getAPI: jest.fn().mockReturnValue({\n                getRepository: jest.fn().mockReturnValue({\n                    getCommits: jest.fn().mockResolvedValue([]),\n                    getBranches: jest.fn().mockResolvedValue([]),\n                    getDiff: jest.fn().mockResolvedValue('')\n                })\n            })\n        }\n    })\n};\n\nexport const env = {\n    clipboard: {\n        readText: jest.fn(),\n        writeText: jest.fn()\n    },\n    openExternal: jest.fn(),\n    machineId: 'mock-machine-id',\n    sessionId: 'mock-session-id'\n};\n\nexport const languages = {\n    createDiagnosticCollection: jest.fn(),\n    registerCompletionItemProvider: jest.fn(),\n    registerHoverProvider: jest.fn()\n};\n\nexport const debug = {\n    startDebugging: jest.fn(),\n    stopDebugging: jest.fn(),\n    onDidStartDebugSession: jest.fn(),\n    onDidTerminateDebugSession: jest.fn()\n};\n\nexport const tasks = {\n    executeTask: jest.fn(),\n    fetchTasks: jest.fn(),\n    onDidStartTask: jest.fn(),\n    onDidEndTask: jest.fn()\n};\n\nexport const TreeItemCollapsibleState = {\n    None: 0,\n    Collapsed: 1,\n    Expanded: 2\n};\n\nexport const ConfigurationTarget = {\n    Global: 1,\n    Workspace: 2,\n    WorkspaceFolder: 3\n};\n\nexport const DiagnosticSeverity = {\n    Error: 0,\n    Warning: 1,\n    Information: 2,\n    Hint: 3\n};\n\nexport const Range = class MockRange {\n    constructor(\n        public start: any,\n        public end: any\n    ) {}\n};\n\nexport const Position = class MockPosition {\n    constructor(\n        public line: number,\n        public character: number\n    ) {}\n};\n\nexport const Selection = class MockSelection extends Range {\n    constructor(\n        public anchor: any,\n        public active: any\n    ) {\n        super(anchor, active);\n    }\n};\n\nexport const Location = class MockLocation {\n    constructor(\n        public uri: any,\n        public range: any\n    ) {}\n};\n\nexport const Diagnostic = class MockDiagnostic {\n    constructor(\n        public range: any,\n        public message: string,\n        public severity?: any\n    ) {}\n};\n\nexport const EventEmitter = class MockEventEmitter<T> {\n    private _event = new NodeEventEmitter();\n    \n    fire(data: T) {\n        this._event.emit('event', data);\n    }\n    \n    get event() {\n        return (listener: (data: T) => void) => {\n            this._event.on('event', listener);\n            return { dispose: () => this._event.removeListener('event', listener) };\n        };\n    }\n    \n    dispose() {\n        this._event.removeAllListeners();\n    }\n};\n\n// Create a mock that can be used by individual tests\nexport const createMockWebviewView = () => ({\n    webview: {\n        html: '',\n        options: {},\n        onDidReceiveMessage: jest.fn(),\n        postMessage: jest.fn(),\n        asWebviewUri: jest.fn().mockReturnValue({ toString: () => 'mock://uri' })\n    },\n    show: jest.fn(),\n    title: '',\n    description: '',\n    onDidDispose: jest.fn(),\n    onDidChangeVisibility: jest.fn()\n});\n\nexport const createMockContext = () => ({\n    subscriptions: [],\n    workspaceState: {\n        get: jest.fn(),\n        update: jest.fn(),\n        keys: jest.fn().mockReturnValue([])\n    },\n    globalState: {\n        get: jest.fn(),\n        update: jest.fn(),\n        keys: jest.fn().mockReturnValue([])\n    },\n    extensionUri: Uri.parse('mock://extension'),\n    extensionPath: '/mock/extension/path',\n    storagePath: '/mock/storage/path',\n    globalStoragePath: '/mock/global/storage/path',\n    logPath: '/mock/log/path',\n    environmentVariableCollection: {\n        persistent: true,\n        replace: jest.fn(),\n        append: jest.fn(),\n        prepend: jest.fn(),\n        get: jest.fn(),\n        forEach: jest.fn(),\n        delete: jest.fn(),\n        clear: jest.fn()\n    }\n});\n\nexport default {\n    StatusBarAlignment,\n    ViewColumn,\n    Uri,\n    workspace,\n    window,\n    commands,\n    extensions,\n    env,\n    languages,\n    debug,\n    tasks,\n    TreeItemCollapsibleState,\n    ConfigurationTarget,\n    DiagnosticSeverity,\n    Range,\n    Position,\n    Selection,\n    Location,\n    Diagnostic,\n    EventEmitter,\n    createMockWebviewView,\n    createMockContext\n};\n"],"version":3}