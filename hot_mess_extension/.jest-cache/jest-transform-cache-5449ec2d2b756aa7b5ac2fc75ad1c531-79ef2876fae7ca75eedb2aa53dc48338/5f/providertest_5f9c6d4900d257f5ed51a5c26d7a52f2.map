{"file":"/Users/gregdunn/src/test/ai_debug_context/vscode/src/webview/__tests__/provider.test.ts","mappings":"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","names":[],"sources":["/Users/gregdunn/src/test/ai_debug_context/vscode/src/webview/__tests__/provider.test.ts"],"sourcesContent":["import { WebviewProvider } from '../provider';\nimport { ProjectDetector } from '../../utils/projectDetector';\nimport { CommandRunner } from '../../utils/shellRunner';\nimport { FileManager } from '../../utils/fileManager';\nimport { StatusTracker } from '../../utils/statusTracker';\nimport { WebviewMessage, ActionButton } from '../../types';\nimport * as vscode from 'vscode';\n\n// Mock VSCode API\njest.mock('vscode', () => ({\n    Uri: {\n        joinPath: jest.fn(() => ({ toString: () => 'mock://uri' })),\n        parse: jest.fn(() => ({ toString: () => 'mock://uri' }))\n    },\n    workspace: {\n        workspaceFolders: [{ uri: { fsPath: '/test/workspace' } }],\n        getConfiguration: jest.fn().mockReturnValue({\n            get: jest.fn(() => true)\n        })\n    },\n    window: {\n        showInformationMessage: jest.fn(),\n        showErrorMessage: jest.fn(),\n        createOutputChannel: jest.fn(() => ({\n            appendLine: jest.fn(),\n            show: jest.fn()\n        }))\n    }\n}));\n\n// Mock dependencies\njest.mock('../../utils/projectDetector');\njest.mock('../../utils/shellRunner');\njest.mock('../../utils/fileManager');\njest.mock('../../utils/statusTracker');\n\nconst MockedProjectDetector = ProjectDetector as jest.MockedClass<typeof ProjectDetector>;\nconst MockedCommandRunner = CommandRunner as jest.MockedClass<typeof CommandRunner>;\nconst MockedFileManager = FileManager as jest.MockedClass<typeof FileManager>;\nconst MockedStatusTracker = StatusTracker as jest.MockedClass<typeof StatusTracker>;\n\ndescribe('WebviewProvider', () => {\n    let provider: WebviewProvider;\n    let mockProjectDetector: jest.Mocked<ProjectDetector>;\n    let mockCommandRunner: jest.Mocked<CommandRunner>;\n    let mockFileManager: jest.Mocked<FileManager>;\n    let mockStatusTracker: jest.Mocked<StatusTracker>;\n    let mockWebviewView: jest.Mocked<vscode.WebviewView>;\n    let mockWebview: jest.Mocked<vscode.Webview>;\n\n    beforeEach(() => {\n        jest.clearAllMocks();\n\n        // Setup mocks\n        mockProjectDetector = {\n            getProjects: jest.fn().mockResolvedValue([\n                { name: 'project1', root: 'apps/project1', projectType: 'application' },\n                { name: 'project2', root: 'libs/project2', projectType: 'library' }\n            ]),\n            getCurrentProject: jest.fn().mockResolvedValue({ name: 'project1', root: 'apps/project1' })\n        } as any;\n\n        mockCommandRunner = {\n            runAiDebug: jest.fn().mockResolvedValue({ success: true, exitCode: 0, output: 'test', duration: 1000 }),\n            runNxTest: jest.fn().mockResolvedValue({ success: true, exitCode: 0, output: 'test', duration: 1000 }),\n            runGitDiff: jest.fn().mockResolvedValue({ success: true, exitCode: 0, output: 'test', duration: 1000 }),\n            runPrepareToPush: jest.fn().mockResolvedValue({ success: true, exitCode: 0, output: 'test', duration: 1000 })\n        } as any;\n\n        mockFileManager = {\n            watchFiles: jest.fn(),\n            getFileContent: jest.fn().mockResolvedValue('test content'),\n            openFile: jest.fn()\n        } as any;\n\n        mockStatusTracker = {\n            clearHistory: jest.fn(),\n            updateStatus: jest.fn(),\n            setRunning: jest.fn(),\n            setComplete: jest.fn()\n        } as any;\n\n        // Setup webview mocks\n        mockWebview = {\n            asWebviewUri: jest.fn().mockReturnValue('mock://webview-uri'),\n            postMessage: jest.fn(),\n            onDidReceiveMessage: jest.fn(),\n            options: {},\n            html: ''\n        } as any;\n\n        mockWebviewView = {\n            webview: mockWebview,\n            show: jest.fn()\n        } as any;\n\n        // Mock constructors\n        MockedProjectDetector.mockImplementation(() => mockProjectDetector);\n        MockedCommandRunner.mockImplementation(() => mockCommandRunner);\n        MockedFileManager.mockImplementation(() => mockFileManager);\n        MockedStatusTracker.mockImplementation(() => mockStatusTracker);\n\n        // Create provider with correct constructor signature\n        provider = new WebviewProvider(\n            vscode.Uri.parse('test://extension'),\n            mockProjectDetector,\n            mockCommandRunner,\n            mockFileManager,\n            mockStatusTracker\n        );\n    });\n\n    describe('initialization', () => {\n        it('should initialize with correct dependencies', () => {\n            expect(provider).toBeInstanceOf(WebviewProvider);\n        });\n\n        it('should setup file watching', () => {\n            // Arrange\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n            \n            // Assert\n            expect(mockFileManager.watchFiles).toHaveBeenCalledWith(expect.any(Function));\n        });\n    });\n\n    describe('resolveWebviewView', () => {\n        it('should setup webview correctly', () => {\n            // Act\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n\n            // Assert\n            expect(mockWebviewView.webview.options.enableScripts).toBe(true);\n            expect(mockWebviewView.webview.options.localResourceRoots).toHaveLength(1);\n            expect(mockWebview.onDidReceiveMessage).toHaveBeenCalled();\n        });\n\n        it('should generate HTML', () => {\n            // Act\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n\n            // Assert\n            expect(mockWebviewView.webview.html).toBeTruthy();\n        });\n    });\n\n    describe('runCommand', () => {\n        beforeEach(() => {\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n        });\n\n        it('should run aiDebug command', async () => {\n            // Act\n            await provider.runCommand('aiDebug', { project: 'project1' });\n\n            // Assert\n            expect(mockCommandRunner.runAiDebug).toHaveBeenCalledWith('project1', undefined);\n        });\n\n        it('should run nxTest command', async () => {\n            // Act\n            await provider.runCommand('nxTest', { project: 'project1' });\n\n            // Assert\n            expect(mockCommandRunner.runNxTest).toHaveBeenCalledWith('project1', undefined);\n        });\n\n        it('should run gitDiff command', async () => {\n            // Act\n            await provider.runCommand('gitDiff', {});\n\n            // Assert\n            expect(mockCommandRunner.runGitDiff).toHaveBeenCalledWith(undefined);\n        });\n\n        it('should run prepareToPush command', async () => {\n            // Act\n            await provider.runCommand('prepareToPush', { project: 'project1' });\n\n            // Assert\n            expect(mockCommandRunner.runPrepareToPush).toHaveBeenCalledWith('project1', undefined);\n        });\n\n        it('should handle command errors', async () => {\n            // Arrange\n            mockCommandRunner.runNxTest.mockRejectedValue(new Error('Test error'));\n\n            // Act\n            await provider.runCommand('nxTest', { project: 'project1' });\n\n            // Assert - Should not throw, error should be handled internally\n            expect(mockCommandRunner.runNxTest).toHaveBeenCalled();\n        });\n    });\n\n    describe('handleMessage', () => {\n        beforeEach(() => {\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n        });\n\n        it('should handle runCommand message', async () => {\n            // Arrange\n            const message: WebviewMessage = {\n                command: 'runCommand',\n                data: {\n                    action: 'nxTest',\n                    project: 'project1'\n                }\n            };\n\n            const onDidReceiveMessageCalls = mockWebview.onDidReceiveMessage.mock.calls;\n            expect(onDidReceiveMessageCalls.length).toBeGreaterThan(0);\n            const messageHandler = onDidReceiveMessageCalls[0][0];\n\n            // Act\n            if (messageHandler) {\n                await messageHandler(message);\n            }\n\n            // Assert\n            expect(mockCommandRunner.runNxTest).toHaveBeenCalled();\n        });\n\n        it('should handle getProjects message', async () => {\n            // Arrange\n            const message: WebviewMessage = {\n                command: 'getProjects',\n                data: {}\n            };\n\n            const onDidReceiveMessageCalls = mockWebview.onDidReceiveMessage.mock.calls;\n            expect(onDidReceiveMessageCalls.length).toBeGreaterThan(0);\n            const messageHandler = onDidReceiveMessageCalls[0][0];\n\n            // Act\n            await messageHandler(message);\n\n            // Assert\n            expect(mockProjectDetector.getProjects).toHaveBeenCalled();\n        });\n\n        it('should handle openFile message', async () => {\n            // Arrange\n            const message: WebviewMessage = {\n                command: 'openFile',\n                data: {\n                    filePath: 'test.txt'\n                }\n            };\n\n            const onDidReceiveMessageCalls = mockWebview.onDidReceiveMessage.mock.calls;\n            expect(onDidReceiveMessageCalls.length).toBeGreaterThan(0);\n            const messageHandler = onDidReceiveMessageCalls[0][0];\n\n            // Act\n            await messageHandler(message);\n\n            // Assert\n            expect(mockFileManager.openFile).toHaveBeenCalledWith('test.txt');\n        });\n\n        it('should handle clearOutput message', async () => {\n            // Arrange\n            const message: WebviewMessage = {\n                command: 'clearOutput',\n                data: {}\n            };\n\n            const onDidReceiveMessageCalls = mockWebview.onDidReceiveMessage.mock.calls;\n            expect(onDidReceiveMessageCalls.length).toBeGreaterThan(0);\n            const messageHandler = onDidReceiveMessageCalls[0][0];\n\n            // Act\n            await messageHandler(message);\n\n            // Assert\n            expect(mockStatusTracker.clearHistory).toHaveBeenCalled();\n        });\n    });\n\n    describe('show', () => {\n        it('should show webview when available', () => {\n            // Arrange\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n\n            // Act\n            provider.show();\n\n            // Assert\n            expect(mockWebviewView.show).toHaveBeenCalled();\n        });\n\n        it('should not crash when webview not available', () => {\n            // Act & Assert - should not throw\n            expect(() => provider.show()).not.toThrow();\n        });\n    });\n\n    describe('error handling', () => {\n        it('should handle project detection errors gracefully', async () => {\n            // Arrange\n            mockProjectDetector.getProjects.mockRejectedValue(new Error('Project detection failed'));\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n            \n            const message: WebviewMessage = {\n                command: 'getProjects',\n                data: {}\n            };\n\n            const onDidReceiveMessageCalls = mockWebview.onDidReceiveMessage.mock.calls;\n            expect(onDidReceiveMessageCalls.length).toBeGreaterThan(0);\n            const messageHandler = onDidReceiveMessageCalls[0][0];\n\n            // Act & Assert - should not throw\n            await expect(messageHandler(message)).resolves.not.toThrow();\n        });\n\n        it('should handle file operation errors gracefully', async () => {\n            // Arrange\n            mockFileManager.openFile.mockRejectedValue(new Error('File read failed'));\n            provider.resolveWebviewView(mockWebviewView, {} as any, {} as any);\n            \n            const message: WebviewMessage = {\n                command: 'openFile',\n                data: { filePath: 'test.txt' }\n            };\n\n            const onDidReceiveMessageCalls = mockWebview.onDidReceiveMessage.mock.calls;\n            expect(onDidReceiveMessageCalls.length).toBeGreaterThan(0);\n            const messageHandler = onDidReceiveMessageCalls[0][0];\n\n            // Act & Assert - should not throw\n            await expect(messageHandler(message)).resolves.not.toThrow();\n        });\n    });\n});"],"version":3}