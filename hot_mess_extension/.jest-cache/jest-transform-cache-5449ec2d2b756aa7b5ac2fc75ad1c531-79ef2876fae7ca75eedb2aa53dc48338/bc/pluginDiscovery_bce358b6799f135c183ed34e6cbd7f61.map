{"file":"/Users/gregdunn/src/test/ai_debug_context/vscode/src/services/plugins/pluginDiscovery.ts","mappings":"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","names":[],"sources":["/Users/gregdunn/src/test/ai_debug_context/vscode/src/services/plugins/pluginDiscovery.ts"],"sourcesContent":["import * as vscode from 'vscode';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { \n  PluginDiscovery, \n  PluginManifest, \n  Plugin, \n  PluginMetadata,\n  PluginSecurity,\n  SecurityReport,\n  SecurityVulnerability,\n  ValidationResult,\n  PermissionResult \n} from '../../types/plugin';\n\nexport class PluginDiscoveryService implements PluginDiscovery {\n  private securityService: PluginSecurityService;\n\n  constructor(private context: vscode.ExtensionContext) {\n    this.securityService = new PluginSecurityService();\n  }\n\n  async discoverPlugins(directories: string | string[]): Promise<PluginManifest[]> {\n    const manifests: PluginManifest[] = [];\n\n    try {\n      const dirArray = Array.isArray(directories) ? directories : [directories];\n      const allPluginDirs: string[] = [];\n      \n      for (const directory of dirArray) {\n        const pluginDirs = await this.getPluginDirectories(directory);\n        allPluginDirs.push(...pluginDirs);\n      }\n      \n      for (const pluginDir of allPluginDirs) {\n        const manifest = await this.loadPluginManifest(pluginDir);\n        if (manifest) {\n          manifests.push(manifest);\n        }\n      }\n    } catch (error) {\n      console.warn(`Failed to discover plugins:`, error);\n    }\n\n    return manifests;\n  }\n\n  async loadPlugin(manifest: PluginManifest): Promise<Plugin> {\n    try {\n      // Security check\n      // Convert manifest to plugin-like object for security scan\n      const pluginForScan = {\n        metadata: manifest.metadata,\n        activate: async () => {},\n        deactivate: async () => {}\n      } as Plugin;\n      \n      const securityReport = await this.securityService.scanPlugin(pluginForScan);\n      if (!securityReport.approved) {\n        throw new Error(`Plugin ${manifest.metadata.id} failed security scan`);\n      }\n\n      // Load plugin module\n      const pluginModule = require(manifest.entryPoint);\n      const PluginClass = pluginModule.default || pluginModule;\n      \n      if (typeof PluginClass !== 'function') {\n        throw new Error(`Plugin ${manifest.metadata.id} does not export a valid plugin class`);\n      }\n\n      const plugin = new PluginClass();\n      \n      // Validate plugin structure\n      if (!await this.validatePlugin(plugin)) {\n        throw new Error(`Plugin ${manifest.metadata.id} failed validation`);\n      }\n\n      return plugin;\n    } catch (error) {\n      throw new Error(`Failed to load plugin ${manifest.metadata.id}: ${(error as Error).message}`);\n    }\n  }\n\n  async validatePlugin(manifest: PluginManifest): Promise<ValidationResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    try {\n      // Check required properties\n      if (!manifest.metadata.id || !manifest.metadata.name || !manifest.metadata.version) {\n        errors.push('Plugin must have id, name, and version in metadata');\n      }\n\n      // Check capabilities\n      if (!manifest.metadata.capabilities || manifest.metadata.capabilities.length === 0) {\n        warnings.push('Plugin should declare at least one capability');\n      }\n\n      // Validate version format\n      if (!this.isValidVersion(manifest.metadata.version)) {\n        errors.push('Plugin version must follow semantic versioning');\n      }\n\n      // Check capabilities structure\n      for (const capability of manifest.metadata.capabilities) {\n        if (!capability.type || !capability.name) {\n          errors.push('Each capability must have type and name');\n        }\n      }\n\n      return {\n        isValid: errors.length === 0,\n        errors,\n        warnings\n      };\n    } catch (error) {\n      return {\n        isValid: false,\n        errors: [`Plugin validation failed: ${(error as Error).message}`],\n        warnings\n      };\n    }\n  }\n\n  private async getPluginDirectories(directory: string): Promise<string[]> {\n    const directories: string[] = [];\n    \n    if (!fs.existsSync(directory)) {\n      return directories;\n    }\n\n    const entries = fs.readdirSync(directory, { withFileTypes: true });\n    \n    for (const entry of entries) {\n      if (entry.isDirectory()) {\n        const pluginDir = path.join(directory, entry.name);\n        const packageJsonPath = path.join(pluginDir, 'package.json');\n        \n        if (fs.existsSync(packageJsonPath)) {\n          directories.push(pluginDir);\n        }\n      }\n    }\n\n    return directories;\n  }\n\n  private async loadPluginManifest(pluginDir: string): Promise<PluginManifest | null> {\n    try {\n      const packageJsonPath = path.join(pluginDir, 'package.json');\n      const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));\n      \n      // Check if it's an AI Debug plugin\n      if (!packageJson.keywords?.includes('ai-debug-plugin')) {\n        return null;\n      }\n\n      const metadata: PluginMetadata = {\n        id: packageJson.name,\n        name: packageJson.displayName || packageJson.name,\n        version: packageJson.version,\n        description: packageJson.description,\n        author: packageJson.author,\n        license: packageJson.license,\n        repository: packageJson.repository?.url,\n        homepage: packageJson.homepage,\n        keywords: packageJson.keywords,\n        enabled: true, // Default to enabled\n        capabilities: packageJson.aiDebugPlugin?.capabilities || [],\n        dependencies: packageJson.aiDebugPlugin?.dependencies || [],\n        engineVersion: packageJson.aiDebugPlugin?.engineVersion || '1.0.0',\n        config: packageJson.aiDebugPlugin?.config || {},\n        icon: packageJson.aiDebugPlugin?.icon,\n        documentation: packageJson.aiDebugPlugin?.documentation,\n        examples: packageJson.aiDebugPlugin?.examples || []\n      };\n\n      const entryPoint = path.join(pluginDir, packageJson.main || 'index.js');\n      \n      if (!fs.existsSync(entryPoint)) {\n        throw new Error(`Entry point not found: ${entryPoint}`);\n      }\n\n      return {\n        path: pluginDir,\n        packageJson,\n        metadata,\n        entryPoint\n      };\n    } catch (error) {\n      console.warn(`Failed to load plugin manifest from ${pluginDir}:`, error);\n      return null;\n    }\n  }\n\n  private isValidVersion(version: string): boolean {\n    // Simplified semver regex that works with TypeScript\n    const semverRegex = /^\\d+\\.\\d+\\.\\d+(?:-[\\w.-]+)?(?:\\+[\\w.-]+)?$/;\n    return semverRegex.test(version);\n  }\n}\n\nclass PluginSecurityService implements PluginSecurity {\n  async validatePlugin(plugin: Plugin): Promise<ValidationResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    try {\n      // Check required methods\n      if (typeof plugin.activate !== 'function') {\n        errors.push('Plugin must have an activate method');\n      }\n\n      if (typeof plugin.deactivate !== 'function') {\n        errors.push('Plugin must have a deactivate method');\n      }\n\n      // Check metadata\n      const { metadata } = plugin;\n      if (!metadata.id || !metadata.name || !metadata.version) {\n        errors.push('Plugin must have id, name, and version in metadata');\n      }\n\n      return {\n        isValid: errors.length === 0,\n        errors,\n        warnings\n      };\n    } catch (error) {\n      return {\n        isValid: false,\n        errors: [`Plugin validation failed: ${(error as Error).message}`],\n        warnings\n      };\n    }\n  }\n  async scanPlugin(plugin: Plugin): Promise<SecurityReport> {\n    const vulnerabilities: SecurityVulnerability[] = [];\n    let riskLevel: 'low' | 'medium' | 'high' | 'critical' = 'low';\n\n    // Check for suspicious dependencies\n    // const suspiciousDeps = await this.checkDependencies(dependencies || {});\n    // vulnerabilities.push(...suspiciousDeps);\n\n    // Check permissions\n    const permissionIssues = await this.checkPermissionsPrivate(plugin.metadata.capabilities);\n    vulnerabilities.push(...permissionIssues);\n    \n    // Check code patterns - would need entry point from plugin metadata\n    // const codeIssues = await this.checkCodePatterns(entryPoint);\n    // vulnerabilities.push(...codeIssues);\n\n    // Determine risk level\n    const criticalVulns = vulnerabilities.filter(v => v.severity === 'critical');\n    const highVulns = vulnerabilities.filter(v => v.severity === 'high');\n    const mediumVulns = vulnerabilities.filter(v => v.severity === 'medium');\n\n    if (criticalVulns.length > 0) {\n      riskLevel = 'critical';\n    } else if (highVulns.length > 0) {\n      riskLevel = 'high';\n    } else if (mediumVulns.length > 0) {\n      riskLevel = 'medium';\n    }\n\n    return {\n      pluginId: plugin.metadata.id,\n      scannedAt: new Date(),\n      riskLevel,\n      issues: vulnerabilities.map(v => ({\n        type: v.type as 'permission' | 'code' | 'dependency' | 'network' | 'file' | 'environment',\n        severity: v.severity,\n        message: v.description,\n        location: v.affectedFiles?.join(', '),\n        fix: v.fix\n      })),\n      recommendations: this.generateRecommendations(vulnerabilities),\n      approved: riskLevel !== 'critical' && vulnerabilities.length === 0\n    };\n  }\n\n  async validatePermissions(plugin: Plugin, permissions: any[]): Promise<boolean> {\n    // Check if plugin is requesting only necessary permissions\n    const validPermissions = ['file-system', 'network', 'extension-api', 'user-interaction', 'workspace-access'];\n    \n    for (const permission of permissions) {\n      if (!validPermissions.includes(permission.type)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async sandboxPlugin(plugin: Plugin): Promise<void> {\n    // Implement plugin sandboxing if needed\n    // This would involve creating a restricted execution environment\n    console.log(`Sandboxing plugin: ${plugin.metadata.id}`);\n  }\n\n  async checkIntegrity(plugin: Plugin): Promise<boolean> {\n    // Implement integrity checking\n    // This would involve verifying plugin signatures, checksums, etc.\n    return true;\n  }\n\n  private async checkDependencies(dependencies: Record<string, string>): Promise<SecurityVulnerability[]> {\n    const vulnerabilities: SecurityVulnerability[] = [];\n    \n    // List of known malicious or problematic packages\n    const suspiciousPackages = [\n      'exec', 'child_process', 'spawn', 'eval', 'vm'\n    ];\n\n    for (const [depName, version] of Object.entries(dependencies)) {\n      if (suspiciousPackages.includes(depName)) {\n        vulnerabilities.push({\n          id: `dep-${depName}`,\n          type: 'dependency',\n          severity: 'medium',\n          description: `Potentially dangerous dependency: ${depName}`,\n          impact: 'Plugin can execute arbitrary code'\n        });\n      }\n    }\n\n    return vulnerabilities;\n  }\n\n  async checkPermissions(plugin: Plugin): Promise<PermissionResult> {\n    const capabilities = plugin.metadata.capabilities;\n    const granted: string[] = [];\n    const denied: string[] = [];\n    const requested: string[] = [];\n    \n    for (const capability of capabilities) {\n      requested.push(capability.type);\n      // Simple approval logic\n      if (['command', 'analyzer', 'formatter'].includes(capability.type)) {\n        granted.push(capability.type);\n      } else {\n        denied.push(capability.type);\n      }\n    }\n    \n    return { granted, denied, requested };\n  }\n  \n  private async checkPermissionsPrivate(capabilities: any[]): Promise<SecurityVulnerability[]> {\n    const vulnerabilities: SecurityVulnerability[] = [];\n    \n    for (const capability of capabilities) {\n      if (capability.permissions) {\n        for (const permission of capability.permissions) {\n          if (permission.type === 'file-system' && permission.scope === '*') {\n            vulnerabilities.push({\n              id: `perm-fs-wildcard`,\n              type: 'permission',\n              severity: 'high',\n              description: 'Plugin requests unrestricted file system access',\n              impact: 'Plugin can read/write any file'\n            });\n          }\n        }\n      }\n    }\n\n    return vulnerabilities;\n  }\n\n  private async checkCodePatterns(entryPoint: string): Promise<SecurityVulnerability[]> {\n    const vulnerabilities: SecurityVulnerability[] = [];\n    \n    try {\n      const code = fs.readFileSync(entryPoint, 'utf8');\n      \n      // Check for eval usage\n      if (code.includes('eval(')) {\n        vulnerabilities.push({\n          id: 'code-eval',\n          type: 'code',\n          severity: 'critical',\n          description: 'Plugin uses eval() which can execute arbitrary code',\n          impact: 'Code injection vulnerability'\n        });\n      }\n\n      // Check for network requests to suspicious domains\n      const suspiciousDomains = ['bit.ly', 'tinyurl.com', 'raw.githubusercontent.com'];\n      for (const domain of suspiciousDomains) {\n        if (code.includes(domain)) {\n          vulnerabilities.push({\n            id: `code-suspicious-domain-${domain}`,\n            type: 'network',\n            severity: 'medium',\n            description: `Plugin makes requests to suspicious domain: ${domain}`,\n            impact: 'Potential data exfiltration'\n          });\n        }\n      }\n\n    } catch (error) {\n      console.warn(`Failed to scan code patterns in ${entryPoint}:`, error);\n    }\n\n    return vulnerabilities;\n  }\n\n  private generateRecommendations(vulnerabilities: SecurityVulnerability[]): string[] {\n    const recommendations: string[] = [];\n    \n    if (vulnerabilities.some(v => v.severity === 'critical')) {\n      recommendations.push('Do not install this plugin due to critical security issues');\n    }\n    \n    if (vulnerabilities.some(v => v.severity === 'high')) {\n      recommendations.push('Review plugin permissions and code before installation');\n    }\n    \n    if (vulnerabilities.some(v => v.type === 'dependency')) {\n      recommendations.push('Audit plugin dependencies for known vulnerabilities');\n    }\n    \n    if (vulnerabilities.some(v => v.type === 'permission')) {\n      recommendations.push('Limit plugin permissions to minimum necessary');\n    }\n    \n    return recommendations;\n  }\n}\n\nexport { PluginSecurityService };\n"],"version":3}