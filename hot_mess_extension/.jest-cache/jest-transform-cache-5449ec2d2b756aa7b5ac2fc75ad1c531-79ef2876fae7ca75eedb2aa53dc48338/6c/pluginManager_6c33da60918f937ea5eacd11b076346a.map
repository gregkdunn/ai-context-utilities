{"file":"/Users/gregdunn/src/test/ai_debug_context/vscode/src/services/plugins/pluginManager.ts","mappings":"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","names":[],"sources":["/Users/gregdunn/src/test/ai_debug_context/vscode/src/services/plugins/pluginManager.ts"],"sourcesContent":["import * as vscode from 'vscode';\nimport { EventEmitter } from 'events';\nimport { \n  Plugin, \n  PluginMetadata, \n  PluginRegistry, \n  PluginAPI, \n  PluginContext, \n  PluginConfig, \n  PluginEvent, \n  PluginDevUtils,\n  PluginLogger,\n  PluginStorage,\n  PluginScheduler,\n  PLUGIN_EVENTS,\n  ExecutionRecord\n} from '../../types/plugin';\n\nexport class PluginManager implements PluginRegistry {\n  private plugins = new Map<string, Plugin>();\n  private pluginConfigs = new Map<string, PluginConfig>();\n  private eventEmitter = new EventEmitter();\n  private pluginAPI: PluginAPI;\n  private context: PluginContext;\n\n  constructor(\n    private extensionContext: vscode.ExtensionContext,\n    private workspaceRoot: string\n  ) {\n    this.pluginAPI = this.createPluginAPI();\n    this.context = this.createPluginContext();\n    this.initializeBuiltinPlugins().catch(error => {\n      console.error('Failed to initialize plugin manager:', error);\n    });\n  }\n\n  private createPluginAPI(): PluginAPI {\n    return {\n      // VS Code API\n      vscode: vscode as any,\n      \n      // Plugin metadata methods\n      getPluginPath: () => this.extensionContext.extensionPath,\n      getPluginVersion: () => this.extensionContext.extension.packageJSON.version,\n      getPluginMetadata: () => ({\n        id: this.extensionContext.extension.id,\n        name: this.extensionContext.extension.packageJSON.displayName || this.extensionContext.extension.packageJSON.name,\n        version: this.extensionContext.extension.packageJSON.version,\n        description: this.extensionContext.extension.packageJSON.description || '',\n        author: this.extensionContext.extension.packageJSON.author || '',\n        license: this.extensionContext.extension.packageJSON.license || '',\n        enabled: true,\n        capabilities: []\n      }),\n      \n      // Command registration\n      registerCommand: (id: string, callback: (...args: any[]) => any) => {\n        const disposable = vscode.commands.registerCommand(id, callback);\n        this.extensionContext.subscriptions.push(disposable);\n        return disposable;\n      },\n      \n      registerProvider: (type: string, provider: any) => {\n        // Implementation depends on provider type\n        return { dispose: () => {} };\n      },\n      // Core services\n      getInsightsEngine: () => this.getInsightsEngine(),\n      getCollaborationService: () => this.getCollaborationService(),\n      getExecutionService: () => this.getExecutionService(),\n\n      // Utilities\n      showNotification: (message: string, type: 'info' | 'warning' | 'error') => {\n        switch (type) {\n          case 'info':\n            vscode.window.showInformationMessage(message);\n            break;\n          case 'warning':\n            vscode.window.showWarningMessage(message);\n            break;\n          case 'error':\n            vscode.window.showErrorMessage(message);\n            break;\n        }\n      },\n      \n      showProgress: async (title: string, task: (progress: any) => Promise<any>) => {\n        return await vscode.window.withProgress({\n          location: vscode.ProgressLocation.Notification,\n          title,\n          cancellable: true\n        }, task);\n      },\n\n      openFile: async (filePath: string) => {\n        const doc = await vscode.workspace.openTextDocument(filePath);\n        await vscode.window.showTextDocument(doc);\n      },\n\n      writeFile: async (filePath: string, content: string) => {\n        const uri = vscode.Uri.file(filePath);\n        await vscode.workspace.fs.writeFile(uri, Buffer.from(content));\n      },\n\n      // Plugin extension points\n      registerAnalyzer: (analyzer) => this.registerAnalyzer(analyzer),\n      registerFormatter: (formatter) => this.registerFormatter(formatter),\n      registerTransformer: (transformer) => this.registerTransformer(transformer),\n      registerValidator: (validator) => this.registerValidator(validator),\n\n      // VS Code workspace and window APIs\n      createOutputChannel: (name: string) => vscode.window.createOutputChannel(name),\n      showMessage: (message: string, level?: 'info' | 'warning' | 'error') => {\n        switch (level) {\n          case 'warning': vscode.window.showWarningMessage(message); break;\n          case 'error': vscode.window.showErrorMessage(message); break;\n          default: vscode.window.showInformationMessage(message);\n        }\n      },\n      getConfiguration: (section?: string) => vscode.workspace.getConfiguration(section),\n      onDidChangeConfiguration: (callback) => vscode.workspace.onDidChangeConfiguration(callback),\n      createStatusBarItem: (alignment?, priority?) => vscode.window.createStatusBarItem(alignment, priority),\n      createTreeView: (viewId, options) => vscode.window.createTreeView(viewId, options),\n      createWebviewPanel: (viewType, title, showOptions, options?) => {\n        if (typeof showOptions === 'object' && showOptions && 'viewColumn' in showOptions) {\n          const webviewOptions = showOptions as { viewColumn: vscode.ViewColumn; preserveFocus?: boolean };\n          return vscode.window.createWebviewPanel(viewType, title, webviewOptions.viewColumn, { ...options, ...webviewOptions });\n        } else {\n          return vscode.window.createWebviewPanel(viewType, title, showOptions as vscode.ViewColumn, options);\n        }\n      },\n      executeCommand: (command, ...args) => vscode.commands.executeCommand(command, ...args),\n      openExternal: (uri) => vscode.env.openExternal(uri),\n      showTextDocument: (document, column?, preserveFocus?) => vscode.window.showTextDocument(document, column, preserveFocus),\n      showQuickPick: (items, options?) => vscode.window.showQuickPick(items, options),\n      showInputBox: (options?) => vscode.window.showInputBox(options),\n      withProgress: (options, task) => vscode.window.withProgress(options, task),\n      createTerminal: (name?, shellPath?, shellArgs?) => vscode.window.createTerminal(name, shellPath, shellArgs),\n      createFileSystemWatcher: (globPattern, ignoreCreateEvents?, ignoreChangeEvents?, ignoreDeleteEvents?) => \n        vscode.workspace.createFileSystemWatcher(globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents),\n      findFiles: (include, exclude?, maxResults?, token?) => vscode.workspace.findFiles(include, exclude, maxResults, token),\n      openTextDocument: (uri) => vscode.workspace.openTextDocument(uri),\n      saveAll: (includeUntitled?) => vscode.workspace.saveAll(includeUntitled),\n      applyEdit: (edit) => vscode.workspace.applyEdit(edit),\n      createDiagnosticCollection: (name?) => vscode.languages.createDiagnosticCollection(name),\n      \n      // Provider registrations\n      registerCodeActionsProvider: (selector, provider) => vscode.languages.registerCodeActionsProvider(selector, provider),\n      registerCompletionItemProvider: (selector, provider, ...triggerCharacters) => \n        vscode.languages.registerCompletionItemProvider(selector, provider, ...triggerCharacters),\n      registerDefinitionProvider: (selector, provider) => vscode.languages.registerDefinitionProvider(selector, provider),\n      registerHoverProvider: (selector, provider) => vscode.languages.registerHoverProvider(selector, provider),\n      registerDocumentFormattingEditProvider: (selector, provider) => \n        vscode.languages.registerDocumentFormattingEditProvider(selector, provider),\n      registerDocumentRangeFormattingEditProvider: (selector, provider) => \n        vscode.languages.registerDocumentRangeFormattingEditProvider(selector, provider),\n      registerRenameProvider: (selector, provider) => vscode.languages.registerRenameProvider(selector, provider),\n      registerReferenceProvider: (selector, provider) => vscode.languages.registerReferenceProvider(selector, provider),\n      registerDocumentSymbolProvider: (selector, provider) => vscode.languages.registerDocumentSymbolProvider(selector, provider),\n      registerDocumentHighlightProvider: (selector, provider) => vscode.languages.registerDocumentHighlightProvider(selector, provider),\n      registerDocumentLinkProvider: (selector, provider) => vscode.languages.registerDocumentLinkProvider(selector, provider),\n      registerSignatureHelpProvider: (selector, provider, ...triggerCharacters) => \n        vscode.languages.registerSignatureHelpProvider(selector, provider, ...triggerCharacters),\n      \n      // Debug and task APIs\n      registerDebugConfigurationProvider: (type, provider) => vscode.debug.registerDebugConfigurationProvider(type, provider),\n      registerDebugAdapterDescriptorFactory: (type, factory) => vscode.debug.registerDebugAdapterDescriptorFactory(type, factory),\n      registerTaskProvider: (type, provider) => vscode.tasks.registerTaskProvider(type, provider),\n      createTask: (definition, name, source, execution, problemMatchers?) => new vscode.Task(definition, vscode.TaskScope.Workspace, name, source, execution, problemMatchers),\n      executeTask: (task) => vscode.tasks.executeTask(task),\n      onDidStartTask: (callback) => vscode.tasks.onDidStartTask(callback),\n      onDidEndTask: (callback) => vscode.tasks.onDidEndTask(callback),\n      onDidStartTaskProcess: (callback) => vscode.tasks.onDidStartTaskProcess(callback),\n      onDidEndTaskProcess: (callback) => vscode.tasks.onDidEndTaskProcess(callback),\n      \n      // Additional provider methods\n      createTreeDataProvider: (viewId, treeDataProvider) => ({ dispose: () => {} }),\n      createCustomTextEditorProvider: (viewType, provider) => ({ dispose: () => {} }),\n      createCustomEditorProvider: (viewType, provider, options?) => ({ dispose: () => {} }),\n      createWebviewViewProvider: (viewId, provider) => ({ dispose: () => {} }),\n      createAuthenticationProvider: (id, label, provider, options?) => ({ dispose: () => {} }),\n      createSourceControlResourceGroup: (id, label) => ({} as any),\n      createSourceControl: (id, label, rootUri?) => ({} as any),\n      createCommentController: (id, label) => ({} as any),\n      createNotebookController: (id, notebookType, label) => ({} as any),\n      createNotebookCellExecution: (uri) => ({} as any),\n      createNotebookCellOutput: (items) => ({} as any),\n      createNotebookCellOutputItem: (data, mime) => ({} as any),\n      createNotebookDocument: (uri, notebookType, metadata?) => ({} as any),\n      createNotebookEdit: (uri, edit) => ({} as any),\n      createNotebookRange: (start, end) => ({} as any),\n      createNotebookCell: (kind, value, languageId, outputs?, metadata?, executionSummary?) => ({} as any),\n      createNotebookCellData: (kind, value, languageId, outputs?, metadata?, executionSummary?) => ({} as any),\n      createNotebookData: (cells, metadata?) => ({} as any),\n      createNotebookDocumentFilter: (pattern?, scheme?, language?) => ({} as any),\n      createNotebookDocumentMetadata: (metadata?) => ({} as any),\n      \n      // Events\n      emit: (event: string, data?: any) => this.eventEmitter.emit(event, data),\n      on: (event: string, handler: (data: any) => void) => this.eventEmitter.on(event, handler),\n      off: (event: string, handler?: (data: any) => void) => {\n        if (handler) {\n          this.eventEmitter.off(event, handler);\n        } else {\n          this.eventEmitter.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  private createPluginContext(): PluginContext {\n    return {\n      subscriptions: this.extensionContext.subscriptions,\n      workspaceState: this.extensionContext.workspaceState,\n      globalState: this.extensionContext.globalState,\n      secrets: this.extensionContext.secrets,\n      extensionUri: this.extensionContext.extensionUri,\n      extensionPath: this.extensionContext.extensionPath,\n      environmentVariableCollection: this.extensionContext.environmentVariableCollection,\n      asAbsolutePath: (relativePath: string) => this.extensionContext.asAbsolutePath(relativePath),\n      storageUri: this.extensionContext.storageUri,\n      storagePath: this.extensionContext.storagePath,\n      globalStorageUri: this.extensionContext.globalStorageUri,\n      globalStoragePath: this.extensionContext.globalStoragePath,\n      logUri: this.extensionContext.logUri,\n      logPath: this.extensionContext.logPath,\n      extensionMode: this.extensionContext.extensionMode,\n      extension: this.extensionContext.extension,\n      workspaceRoot: this.workspaceRoot,\n      currentFile: vscode.window.activeTextEditor?.document.fileName,\n      selectedText: vscode.window.activeTextEditor?.document.getText(\n        vscode.window.activeTextEditor?.selection\n      ),\n      executionHistory: [],\n      aiInsights: [],\n      collaborationData: {},\n      customData: {}\n    };\n  }\n\n  // Plugin Registry implementation\n  async register(plugin: Plugin): Promise<void> {\n    const { id } = plugin.metadata;\n    \n    if (this.plugins.has(id)) {\n      throw new Error(`Plugin with ID '${id}' is already registered`);\n    }\n\n    // Validate plugin\n    await this.validatePlugin(plugin);\n\n    // Store plugin\n    this.plugins.set(id, plugin);\n    \n    // Set default config\n    if (!this.pluginConfigs.has(id)) {\n      this.pluginConfigs.set(id, {\n        enabled: plugin.metadata.enabled,\n        settings: plugin.metadata.config || {},\n        permissions: [],\n        resources: {}\n      });\n    }\n\n    // Activate if enabled\n    if (this.isEnabled(id)) {\n      await this.activatePlugin(id);\n    }\n\n    this.emitEvent(PLUGIN_EVENTS.ACTIVATED, { pluginId: id });\n  }\n\n  async unregister(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      throw new Error(`Plugin with ID '${pluginId}' not found`);\n    }\n\n    // Deactivate if active\n    if (this.isEnabled(pluginId)) {\n      await this.deactivatePlugin(pluginId);\n    }\n\n    // Remove from storage\n    this.plugins.delete(pluginId);\n    this.pluginConfigs.delete(pluginId);\n\n    this.emitEvent(PLUGIN_EVENTS.DEACTIVATED, { pluginId });\n  }\n\n  get(pluginId: string): Plugin | undefined {\n    return this.plugins.get(pluginId);\n  }\n\n  getAll(): Plugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  getPlugin(pluginId: string): Plugin | undefined {\n    return this.plugins.get(pluginId);\n  }\n\n  getAllPlugins(): Plugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  getByCapability(capability: string): Plugin[] {\n    return this.getAll().filter(plugin => \n      plugin.metadata.capabilities.some(cap => cap.type === capability)\n    );\n  }\n\n  isEnabled(pluginId: string): boolean {\n    const config = this.pluginConfigs.get(pluginId);\n    return config?.enabled ?? false;\n  }\n\n  async enable(pluginId: string): Promise<void> {\n    const config = this.pluginConfigs.get(pluginId);\n    if (!config) {\n      throw new Error(`Plugin '${pluginId}' not found`);\n    }\n\n    config.enabled = true;\n    await this.activatePlugin(pluginId);\n    this.savePluginConfig(pluginId, config);\n  }\n\n  async disable(pluginId: string): Promise<void> {\n    const config = this.pluginConfigs.get(pluginId);\n    if (!config) {\n      throw new Error(`Plugin '${pluginId}' not found`);\n    }\n\n    config.enabled = false;\n    await this.deactivatePlugin(pluginId);\n    this.savePluginConfig(pluginId, config);\n  }\n\n  // Plugin lifecycle\n  private async activatePlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      throw new Error(`Plugin '${pluginId}' not found`);\n    }\n\n    try {\n      await plugin.activate(this.pluginAPI, this.context);\n      \n      // Register plugin capabilities\n      this.registerPluginCapabilities(plugin);\n      \n      // Execute activation hook\n      if (plugin.hooks?.onActivate) {\n        await plugin.hooks.onActivate(this.context);\n      }\n    } catch (error) {\n      this.emitEvent(PLUGIN_EVENTS.ERROR, { \n        pluginId, \n        error: (error as Error).message \n      });\n      throw error;\n    }\n  }\n\n  private async deactivatePlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      return;\n    }\n\n    try {\n      // Execute deactivation hook\n      if (plugin.hooks?.onDeactivate) {\n        await plugin.hooks.onDeactivate(this.context);\n      }\n\n      await plugin.deactivate(this.pluginAPI, this.context);\n      \n      // Unregister plugin capabilities\n      this.unregisterPluginCapabilities(plugin);\n    } catch (error) {\n      this.emitEvent(PLUGIN_EVENTS.ERROR, { \n        pluginId, \n        error: (error as Error).message \n      });\n      throw error;\n    }\n  }\n\n  private registerPluginCapabilities(plugin: Plugin): void {\n    const { id } = plugin.metadata;\n\n    // Register commands\n    if (plugin.commands) {\n      plugin.commands.forEach(command => {\n        this.registerCommand(command);\n      });\n    }\n\n    // Register analyzers\n    if (plugin.analyzers) {\n      plugin.analyzers.forEach(analyzer => {\n        this.registerAnalyzer(analyzer);\n      });\n    }\n\n    // Register formatters\n    if (plugin.formatters) {\n      plugin.formatters.forEach(formatter => {\n        this.registerFormatter(formatter);\n      });\n    }\n\n    // Register transformers\n    if (plugin.transformers) {\n      plugin.transformers.forEach(transformer => {\n        this.registerTransformer(transformer);\n      });\n    }\n\n    // Register validators\n    if (plugin.validators) {\n      plugin.validators.forEach(validator => {\n        this.registerValidator(validator);\n      });\n    }\n  }\n\n  private unregisterPluginCapabilities(plugin: Plugin): void {\n    // Implementation would remove registered capabilities\n    // This is a simplified version\n  }\n\n  // Capability registration methods\n  private registerCommand(command: any): void {\n    // Register VSCode command\n    const disposable = vscode.commands.registerCommand(\n      `aiDebug.plugin.${command.id}`,\n      async (...args: any[]) => {\n        try {\n          const result = await command.execute(this.context, args);\n          this.emitEvent(PLUGIN_EVENTS.COMMAND_EXECUTED, {\n            commandId: command.id,\n            result\n          });\n          return result;\n        } catch (error) {\n          this.emitEvent(PLUGIN_EVENTS.ERROR, {\n            commandId: command.id,\n            error: (error as Error).message\n          });\n          throw error;\n        }\n      }\n    );\n\n    this.extensionContext.subscriptions.push(disposable);\n  }\n\n  private registerAnalyzer(analyzer: any): void {\n    // Store analyzer for use by insight engine\n    this.eventEmitter.emit('analyzer:registered', analyzer);\n  }\n\n  private registerFormatter(formatter: any): void {\n    // Store formatter for use by output system\n    this.eventEmitter.emit('formatter:registered', formatter);\n  }\n\n  private registerTransformer(transformer: any): void {\n    // Store transformer for use by processing pipeline\n    this.eventEmitter.emit('transformer:registered', transformer);\n  }\n\n  private registerValidator(validator: any): void {\n    // Store validator for use by validation system\n    this.eventEmitter.emit('validator:registered', validator);\n  }\n\n  // Plugin validation\n  private async validatePlugin(plugin: Plugin): Promise<void> {\n    const { metadata } = plugin;\n    \n    if (!metadata.id || !metadata.name || !metadata.version) {\n      throw new Error('Plugin must have id, name, and version');\n    }\n\n    if (!metadata.capabilities || metadata.capabilities.length === 0) {\n      throw new Error('Plugin must declare at least one capability');\n    }\n\n    // Validate dependencies\n    if (metadata.dependencies) {\n      for (const dep of metadata.dependencies) {\n        if (!this.plugins.has(dep)) {\n          throw new Error(`Missing dependency: ${dep}`);\n        }\n      }\n    }\n\n    // Validate required methods\n    if (typeof plugin.activate !== 'function') {\n      throw new Error('Plugin must have an activate method');\n    }\n\n    if (typeof plugin.deactivate !== 'function') {\n      throw new Error('Plugin must have a deactivate method');\n    }\n  }\n\n  // Configuration management\n  private savePluginConfig(pluginId: string, config: PluginConfig): void {\n    const configs = this.extensionContext.globalState.get<Record<string, PluginConfig>>('pluginConfigs', {});\n    configs[pluginId] = config;\n    this.extensionContext.globalState.update('pluginConfigs', configs);\n  }\n\n  private loadPluginConfigs(): void {\n    const configs = this.extensionContext.globalState.get<Record<string, PluginConfig>>('pluginConfigs', {});\n    for (const [pluginId, config] of Object.entries(configs)) {\n      this.pluginConfigs.set(pluginId, config);\n    }\n  }\n\n  // Event handling\n  private emitEvent(type: string, data?: any): void {\n    const event: PluginEvent = {\n      type,\n      pluginId: data?.pluginId || 'system',\n      timestamp: new Date(),\n      data,\n      source: 'plugin-manager'\n    };\n\n    this.eventEmitter.emit(type, event);\n  }\n\n  // Development utilities\n  createDevUtils(pluginId: string): PluginDevUtils {\n    return {\n      createTestSuite: (id: string) => this.createTestSuite(id),\n      createLogger: (id: string) => this.createLogger(id),\n      createProfiler: (id: string) => this.createProfiler(id),\n      createStorage: (id: string) => this.createStorage(id),\n      createScheduler: (id: string) => this.createScheduler(id)\n    };\n  }\n\n  private createLogger(pluginId: string): PluginLogger {\n    return {\n      info: (message: string, data?: any) => {\n        console.log(`[${pluginId}] ${message}`, data);\n      },\n      warn: (message: string, data?: any) => {\n        console.warn(`[${pluginId}] ${message}`, data);\n      },\n      error: (message: string, error?: Error) => {\n        console.error(`[${pluginId}] ${message}`, error);\n      },\n      debug: (message: string, data?: any) => {\n        console.debug(`[${pluginId}] ${message}`, data);\n      },\n      trace: (message: string, data?: any) => {\n        console.trace(`[${pluginId}] ${message}`, data);\n      },\n      setLevel: (level: 'debug' | 'info' | 'warn' | 'error' | 'trace') => {\n        // Implementation would set the log level\n      },\n      createChild: (name: string) => {\n        return this.createLogger(`${pluginId}:${name}`);\n      }\n    };\n  }\n\n  private createStorage(pluginId: string): PluginStorage {\n    const prefix = `plugin.${pluginId}.`;\n    \n    return {\n      get: async <T>(key: string): Promise<T | undefined> => {\n        return this.extensionContext.globalState.get<T>(prefix + key);\n      },\n      set: async <T>(key: string, value: T): Promise<void> => {\n        await this.extensionContext.globalState.update(prefix + key, value);\n      },\n      delete: async (key: string): Promise<void> => {\n        await this.extensionContext.globalState.update(prefix + key, undefined);\n      },\n      clear: async (): Promise<void> => {\n        // Get all keys with this plugin's prefix and clear them\n        const keys = this.extensionContext.globalState.keys();\n        for (const key of keys) {\n          if (key.startsWith(prefix)) {\n            await this.extensionContext.globalState.update(key, undefined);\n          }\n        }\n      },\n      keys: async (): Promise<string[]> => {\n        return this.extensionContext.globalState.keys()\n          .filter(key => key.startsWith(prefix))\n          .map(key => key.substring(prefix.length));\n      },\n      has: async (key: string): Promise<boolean> => {\n        return this.extensionContext.globalState.keys().includes(prefix + key);\n      },\n      size: async (): Promise<number> => {\n        return this.extensionContext.globalState.keys()\n          .filter(key => key.startsWith(prefix)).length;\n      }\n    };\n  }\n\n  private createScheduler(pluginId: string): PluginScheduler {\n    const timers = new Map<string, NodeJS.Timeout>();\n    \n    return {\n      schedule: (task: () => Promise<void> | void, delay: number) => {\n        const id = `task_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        \n        // Create timer\n        const timer = setTimeout(async () => {\n          try {\n            await task();\n          } catch (error) {\n          this.emitEvent(PLUGIN_EVENTS.ERROR, {\n          pluginId,\n          error: (error as Error).message,\n          source: 'scheduler'\n          });\n          }\n          timers.delete(id);\n        }, delay);\n\n        timers.set(id, timer);\n        \n        return {\n          id,\n          cancel: () => {\n            const timer = timers.get(id);\n            if (timer) {\n              clearTimeout(timer);\n              timers.delete(id);\n            }\n          },\n          reschedule: (newDelay: number) => {\n            const timer = timers.get(id);\n            if (timer) {\n              clearTimeout(timer);\n              const newTimer = setTimeout(async () => {\n                try {\n                  await task();\n                } catch (error) {\n                  this.emitEvent(PLUGIN_EVENTS.ERROR, {\n                    pluginId,\n                    error: (error as Error).message,\n                    source: 'scheduler'\n                  });\n                }\n                timers.delete(id);\n              }, newDelay);\n              timers.set(id, newTimer);\n            }\n          }\n        };\n      },\n      scheduleRepeating: (task: () => Promise<void> | void, interval: number) => {\n        const id = `repeat_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        \n        const timer = setInterval(async () => {\n          try {\n            await task();\n          } catch (error) {\n            this.emitEvent(PLUGIN_EVENTS.ERROR, {\n              pluginId,\n              error: (error as Error).message,\n              source: 'scheduler'\n            });\n          }\n        }, interval);\n\n        timers.set(id, timer);\n        \n        return {\n          id,\n          cancel: () => {\n            const timer = timers.get(id);\n            if (timer) {\n              clearInterval(timer);\n              timers.delete(id);\n            }\n          },\n          reschedule: (newInterval: number) => {\n            const timer = timers.get(id);\n            if (timer) {\n              clearInterval(timer);\n              const newTimer = setInterval(async () => {\n                try {\n                  await task();\n                } catch (error) {\n                  this.emitEvent(PLUGIN_EVENTS.ERROR, {\n                    pluginId,\n                    error: (error as Error).message,\n                    source: 'scheduler'\n                  });\n                }\n              }, newInterval);\n              timers.set(id, newTimer);\n            }\n          }\n        };\n      },\n      cancel: (scheduledTask) => {\n        scheduledTask.cancel();\n      },\n      cancelAll: () => {\n        for (const timer of timers.values()) {\n          clearInterval(timer);\n          clearTimeout(timer);\n        }\n        timers.clear();\n      }\n    };\n  }\n\n  private createTestSuite(pluginId: string): any {\n    return {\n      addTest: (name: string, test: () => Promise<void> | void) => {\n        // Implementation would add test to suite\n      },\n      addSetup: (setup: () => Promise<void> | void) => {\n        // Implementation would add setup\n      },\n      addTeardown: (teardown: () => Promise<void> | void) => {\n        // Implementation would add teardown\n      }\n    };\n  }\n  \n  private createProfiler(pluginId: string): any {\n    return {\n      start: (name: string) => {\n        const startTime = Date.now();\n        return {\n          end: () => Date.now() - startTime,\n          mark: (markName: string) => {\n            // Implementation would record mark\n          }\n        };\n      },\n      measure: <T>(name: string, fn: () => T): T => {\n        const start = Date.now();\n        const result = fn();\n        console.log(`[${pluginId}] ${name}: ${Date.now() - start}ms`);\n        return result;\n      },\n      measureAsync: async <T>(name: string, fn: () => Promise<T>): Promise<T> => {\n        const start = Date.now();\n        const result = await fn();\n        console.log(`[${pluginId}] ${name}: ${Date.now() - start}ms`);\n        return result;\n      }\n    };\n  }\n\n  // Integration with existing services\n  private getInsightsEngine(): any {\n    // Return reference to existing AI insights engine\n    return null; // Placeholder\n  }\n\n  private getCollaborationService(): any {\n    // Return reference to existing collaboration service\n    return null; // Placeholder\n  }\n\n  private getExecutionService(): any {\n    // Return reference to existing execution service\n    return null; // Placeholder\n  }\n\n  // Built-in plugins initialization\n  private async initializeBuiltinPlugins(): Promise<void> {\n    // Load built-in plugins\n    this.loadPluginConfigs();\n    \n    // Register built-in plugins\n    try {\n      const { GitAnalyzerPlugin, TestAnalyzerPlugin, AIProviderPlugin } = await import('./builtin');\n      \n      // Register Git Analyzer Plugin\n      const gitPlugin = new GitAnalyzerPlugin();\n      await this.register(gitPlugin);\n      \n      // Register Test Analyzer Plugin\n      const testPlugin = new TestAnalyzerPlugin();\n      await this.register(testPlugin);\n      \n      // Register AI Provider Plugin\n      const aiPlugin = new AIProviderPlugin();\n      await this.register(aiPlugin);\n      \n      console.log('Built-in plugins initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize built-in plugins:', error);\n    }\n  }\n\n  // Public API for extension\n  public async executePluginCommand(pluginId: string, commandId: string, args?: any[]): Promise<any> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin || !this.isEnabled(pluginId)) {\n      throw new Error(`Plugin '${pluginId}' not found or not enabled`);\n    }\n\n    const command = plugin.commands?.find(cmd => cmd.id === commandId);\n    if (!command) {\n      throw new Error(`Command '${commandId}' not found in plugin '${pluginId}'`);\n    }\n\n    return await command.execute(this.context, args);\n  }\n\n  public getPluginInsights(pluginId: string): any[] {\n    // Return insights generated by specific plugin\n    return [];\n  }\n\n  public async refreshPluginContext(): Promise<void> {\n    this.context = this.createPluginContext();\n    \n    // Notify all active plugins about context change\n    for (const [pluginId, plugin] of this.plugins) {\n      if (this.isEnabled(pluginId) && plugin.hooks?.onCommand) {\n        // This is a simplified notification\n        // In practice, you'd have a more sophisticated context update system\n      }\n    }\n  }\n}\n"],"version":3}