{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { FileSelectorComponent } from './modules/file-selection/file-selector.component';\nimport { TestSelectorComponent } from './modules/test-selection/test-selector.component';\nimport { AIDebugComponent } from './modules/ai-debug/ai-debug.component';\nimport { PRGeneratorComponent } from './modules/pr-generator/pr-generator.component';\nlet AppComponent = class AppComponent {\n  constructor(vscode) {\n    this.vscode = vscode;\n    this.subscription = new Subscription();\n    // Module navigation\n    this.activeModule = signal('overview');\n    // Module data\n    this.fileSelection = signal(null);\n    this.testConfiguration = signal(null);\n    this.testResults = signal(null);\n    this.aiAnalysis = signal(null);\n    this.prDescription = signal(null);\n  }\n  ngOnInit() {\n    this.subscription.add(this.vscode.onMessage().subscribe(message => {\n      if (message) {\n        this.internalHandleVscodeMessage(message);\n      }\n    }));\n    // Load any saved state\n    const savedState = this.vscode.getState();\n    if (savedState) {\n      this.restoreState(savedState);\n    }\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  // Navigation methods\n  showOverview() {\n    this.activeModule.set('overview');\n    this.saveState();\n  }\n  showModule(module) {\n    this.activeModule.set(module);\n    this.saveState();\n  }\n  // Status methods\n  getFileSelectionStatus() {\n    const selection = this.fileSelection();\n    if (!selection) return 'Not configured';\n    switch (selection.mode) {\n      case 'uncommitted':\n        return `${selection.files.length} uncommitted files`;\n      case 'commit':\n        return `Commit: ${selection.commit?.hash.substring(0, 7) || 'Unknown'}`;\n      case 'branch-diff':\n        return 'Branch to main diff';\n      default:\n        return 'Configured';\n    }\n  }\n  getTestConfigStatus() {\n    const config = this.testConfiguration();\n    if (!config) return 'Not configured';\n    if (config.mode === 'affected') {\n      return 'Affected tests';\n    } else {\n      return config.project ? `Project: ${config.project}` : 'Project mode';\n    }\n  }\n  getPRGeneratorStatus() {\n    if (!this.fileSelection()) return 'Requires file selection';\n    if (this.prDescription()) return 'Description generated';\n    return 'Ready to generate';\n  }\n  canRunAIDebug() {\n    return !!(this.fileSelection() && this.testConfiguration());\n  }\n  // Event handlers\n  onFileSelectionChanged(selection) {\n    this.fileSelection.set(selection);\n    this.saveState();\n    this.vscode.postMessage('fileSelectionChanged', selection);\n  }\n  onTestConfigurationChanged(config) {\n    this.testConfiguration.set(config);\n    this.saveState();\n    this.vscode.postMessage('testConfigurationChanged', config);\n  }\n  onAIDebugComplete(result) {\n    this.testResults.set(result.testResults);\n    this.aiAnalysis.set(result.aiAnalysis);\n    this.saveState();\n    this.vscode.postMessage('aiDebugComplete', result);\n  }\n  onPRDescriptionGenerated(description) {\n    this.prDescription.set(description);\n    this.saveState();\n    this.vscode.postMessage('prDescriptionGenerated', description);\n  }\n  internalHandleVscodeMessage(message) {\n    switch (message.command) {\n      case 'showModule':\n        if (message.data?.moduleType) {\n          this.showModule(message.data.moduleType);\n        }\n        break;\n      case 'resetState':\n        this.resetAllState();\n        break;\n    }\n  }\n  // Public method for testing\n  handleVscodeMessage(message) {\n    this.internalHandleVscodeMessage(message);\n  }\n  saveState() {\n    const state = {\n      activeModule: this.activeModule(),\n      fileSelection: this.fileSelection(),\n      testConfiguration: this.testConfiguration(),\n      testResults: this.testResults(),\n      aiAnalysis: this.aiAnalysis(),\n      prDescription: this.prDescription()\n    };\n    this.vscode.setState(state);\n  }\n  restoreState(state) {\n    if (state.activeModule) this.activeModule.set(state.activeModule);\n    if (state.fileSelection) this.fileSelection.set(state.fileSelection);\n    if (state.testConfiguration) this.testConfiguration.set(state.testConfiguration);\n    if (state.testResults) this.testResults.set(state.testResults);\n    if (state.aiAnalysis) this.aiAnalysis.set(state.aiAnalysis);\n    if (state.prDescription) this.prDescription.set(state.prDescription);\n  }\n  resetAllState() {\n    this.activeModule.set('overview');\n    this.fileSelection.set(null);\n    this.testConfiguration.set(null);\n    this.testResults.set(null);\n    this.aiAnalysis.set(null);\n    this.prDescription.set(null);\n    this.saveState();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  imports: [CommonModule, FileSelectorComponent, TestSelectorComponent, AIDebugComponent, PRGeneratorComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"min-h-screen bg-vscode-background text-vscode-foreground p-4\">\n      <!-- Header -->\n      <header class=\"flex items-center justify-between mb-6 pb-4 border-b border-vscode-panel-border\">\n        <h1 class=\"flex items-center gap-3 text-2xl font-bold\">\n          <span class=\"text-3xl\">ü§ñ</span>\n          AI Debug Context\n        </h1>\n        @if (activeModule() !== 'overview') {\n          <button\n            (click)=\"showOverview()\"\n            class=\"px-4 py-2 bg-vscode-button-secondaryBackground text-vscode-button-secondaryForeground rounded hover:bg-vscode-button-secondaryHoverBackground\">\n            ‚Üê Back to Overview\n          </button>\n        }\n      </header>\n\n      <!-- Module Overview -->\n      @if (activeModule() === 'overview') {\n        <main class=\"max-w-4xl mx-auto\">\n          <!-- Status Summary -->\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\">\n            <div class=\"bg-vscode-editor-background border border-vscode-panel-border rounded-lg p-4\">\n              <div class=\"flex items-center gap-2 mb-2\">\n                <span class=\"text-xl\">üìÅ</span>\n                <h3 class=\"font-semibold\">File Selection</h3>\n              </div>\n              <p class=\"text-sm text-vscode-descriptionForeground mb-3\">{{ getFileSelectionStatus() }}</p>\n              <button\n                (click)=\"showModule('file-selection')\"\n                class=\"w-full px-3 py-2 bg-vscode-button-background text-vscode-button-foreground rounded hover:bg-vscode-button-hoverBackground\">\n                Configure\n              </button>\n            </div>\n\n            <div class=\"bg-vscode-editor-background border border-vscode-panel-border rounded-lg p-4\">\n              <div class=\"flex items-center gap-2 mb-2\">\n                <span class=\"text-xl\">üß™</span>\n                <h3 class=\"font-semibold\">Test Configuration</h3>\n              </div>\n              <p class=\"text-sm text-vscode-descriptionForeground mb-3\">{{ getTestConfigStatus() }}</p>\n              <button\n                (click)=\"showModule('test-selection')\"\n                class=\"w-full px-3 py-2 bg-vscode-button-background text-vscode-button-foreground rounded hover:bg-vscode-button-hoverBackground\">\n                Configure\n              </button>\n            </div>\n\n            <div class=\"bg-vscode-editor-background border border-vscode-panel-border rounded-lg p-4\">\n              <div class=\"flex items-center gap-2 mb-2\">\n                <span class=\"text-xl\">üìã</span>\n                <h3 class=\"font-semibold\">PR Generator</h3>\n              </div>\n              <p class=\"text-sm text-vscode-descriptionForeground mb-3\">{{ getPRGeneratorStatus() }}</p>\n              <button\n                (click)=\"showModule('pr-generator')\"\n                [disabled]=\"!fileSelection()\"\n                class=\"w-full px-3 py-2 bg-vscode-button-background text-vscode-button-foreground rounded hover:bg-vscode-button-hoverBackground disabled:opacity-50\">\n                Configure\n              </button>\n            </div>\n          </div>\n\n          <!-- Main AI Debug Action -->\n          <div class=\"bg-vscode-editor-background border border-vscode-panel-border rounded-lg p-6 text-center\">\n            <div class=\"flex items-center justify-center gap-3 mb-4\">\n              <span class=\"text-4xl\">üöÄ</span>\n              <h2 class=\"text-xl font-bold\">AI Test Debug</h2>\n            </div>\n            <p class=\"text-vscode-descriptionForeground mb-6 max-w-md mx-auto\">\n              Run the complete AI-powered test debugging workflow with your configured settings.\n            </p>\n            <button\n              (click)=\"showModule('ai-debug')\"\n              [disabled]=\"!canRunAIDebug()\"\n              class=\"px-8 py-4 bg-vscode-button-background text-vscode-button-foreground rounded-lg font-semibold text-lg hover:bg-vscode-button-hoverBackground disabled:opacity-50 disabled:cursor-not-allowed\">\n              @if (!canRunAIDebug()) {\n                <span class=\"flex items-center gap-2\">\n                  <span>‚ö†Ô∏è</span>\n                  Configure Prerequisites First\n                </span>\n              } @else {\n                <span class=\"flex items-center gap-2\">\n                  <span>ü§ñ</span>\n                  Run AI Test Debug\n                </span>\n              }\n            </button>\n            @if (!canRunAIDebug()) {\n              <p class=\"text-vscode-descriptionForeground text-sm mt-3\">\n                Complete file selection and test configuration to continue\n              </p>\n            }\n          </div>\n        </main>\n      }\n\n      <!-- File Selection Module -->\n      @if (activeModule() === 'file-selection') {\n        <app-file-selector\n          (selectionChanged)=\"onFileSelectionChanged($event)\">\n        </app-file-selector>\n      }\n\n      <!-- Test Selection Module -->\n      @if (activeModule() === 'test-selection') {\n        <app-test-selector\n          (configurationChanged)=\"onTestConfigurationChanged($event)\">\n        </app-test-selector>\n      }\n\n      <!-- AI Debug Module -->\n      @if (activeModule() === 'ai-debug') {\n        <app-ai-debug\n          [fileSelection]=\"fileSelection()\"\n          [testConfiguration]=\"testConfiguration()\"\n          (workflowComplete)=\"onAIDebugComplete($event)\">\n        </app-ai-debug>\n      }\n\n      <!-- PR Generator Module -->\n      @if (activeModule() === 'pr-generator') {\n        <app-pr-generator\n          [fileSelection]=\"fileSelection()\"\n          [testResults]=\"testResults()\"\n          [aiAnalysis]=\"aiAnalysis()\"\n          (descriptionGenerated)=\"onPRDescriptionGenerated($event)\">\n        </app-pr-generator>\n      }\n    </div>\n  `,\n  styles: [`\n    .ai-debug-context-container {\n      min-height: 100vh;\n      padding: 16px;\n      font-family: var(--vscode-font-family);\n    }\n\n    .header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 24px;\n      padding-bottom: 16px;\n      border-bottom: 1px solid var(--vscode-panel-border);\n    }\n\n    .header-title {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      margin: 0;\n      font-size: 24px;\n      font-weight: 600;\n      color: var(--vscode-editor-foreground);\n    }\n\n    .header-icon {\n      color: var(--vscode-button-background);\n    }\n\n    .status-indicator {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: var(--vscode-descriptionForeground);\n      font-size: 14px;\n    }\n\n    .main-content {\n      max-width: 800px;\n    }\n\n    .module-section {\n      margin-bottom: 32px;\n    }\n\n    .module-section h2 {\n      margin-bottom: 16px;\n      color: var(--vscode-editor-foreground);\n    }\n\n    .module-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 16px;\n    }\n\n    .module-card {\n      background-color: var(--vscode-editor-background);\n      border: 1px solid var(--vscode-panel-border);\n      border-radius: 8px;\n      padding: 20px;\n      text-align: center;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n\n    .module-card:hover {\n      border-color: var(--vscode-button-background);\n      background-color: var(--vscode-list-hoverBackground);\n    }\n\n    .module-card.primary {\n      border-color: var(--vscode-button-background);\n      background-color: var(--vscode-button-background);\n      color: var(--vscode-button-foreground);\n    }\n\n    .module-icon {\n      font-size: 32px;\n      margin-bottom: 12px;\n    }\n\n    .module-card h3 {\n      margin: 0 0 8px 0;\n      font-size: 16px;\n      font-weight: 600;\n    }\n\n    .module-card p {\n      margin: 0;\n      font-size: 14px;\n      color: var(--vscode-descriptionForeground);\n    }\n\n    .module-card.primary p {\n      color: var(--vscode-button-foreground);\n      opacity: 0.9;\n    }\n\n    .quick-actions {\n      margin-bottom: 32px;\n    }\n\n    .quick-actions h2 {\n      margin-bottom: 16px;\n      color: var(--vscode-editor-foreground);\n    }\n\n    .action-buttons {\n      display: flex;\n      gap: 16px;\n      flex-wrap: wrap;\n    }\n\n    .btn {\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      padding: 12px 24px;\n      border: none;\n      border-radius: 6px;\n      font-family: var(--vscode-font-family);\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: background-color 0.2s ease;\n    }\n\n    .btn-primary {\n      background-color: var(--vscode-button-background);\n      color: var(--vscode-button-foreground);\n    }\n\n    .btn-primary:hover {\n      background-color: var(--vscode-button-hoverBackground);\n    }\n\n    .btn-secondary {\n      background-color: var(--vscode-button-secondaryBackground);\n      color: var(--vscode-button-secondaryForeground);\n    }\n\n    .btn-secondary:hover {\n      background-color: var(--vscode-button-secondaryHoverBackground);\n    }\n\n    .btn-icon {\n      flex-shrink: 0;\n    }\n\n    .workflow-progress {\n      margin-bottom: 32px;\n    }\n\n    .progress-container {\n      background-color: var(--vscode-editor-background);\n      border: 1px solid var(--vscode-panel-border);\n      border-radius: 8px;\n      padding: 24px;\n    }\n\n    .progress-bar {\n      width: 100%;\n      height: 4px;\n      background-color: var(--vscode-progressBar-background);\n      border-radius: 2px;\n      margin-bottom: 24px;\n      overflow: hidden;\n    }\n\n    .progress-fill {\n      height: 100%;\n      background-color: var(--vscode-progressBar-foreground);\n      transition: width 0.3s ease;\n      border-radius: 2px;\n    }\n\n    .progress-steps {\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      gap: 16px;\n    }\n\n    .progress-step {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 8px;\n      opacity: 0.5;\n      transition: opacity 0.2s ease;\n    }\n\n    .progress-step.active,\n    .progress-step.completed {\n      opacity: 1;\n    }\n\n    .step-icon {\n      width: 40px;\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 50%;\n      background-color: var(--vscode-panel-background);\n      border: 2px solid var(--vscode-panel-border);\n      font-size: 18px;\n    }\n\n    .progress-step.active .step-icon {\n      border-color: var(--vscode-button-background);\n      background-color: var(--vscode-button-background);\n      color: var(--vscode-button-foreground);\n    }\n\n    .progress-step.completed .step-icon {\n      border-color: var(--vscode-testing-iconPassed);\n      background-color: var(--vscode-testing-iconPassed);\n      color: white;\n    }\n\n    .progress-step span {\n      font-size: 12px;\n      text-align: center;\n      color: var(--vscode-descriptionForeground);\n    }\n\n    .progress-step.active span,\n    .progress-step.completed span {\n      color: var(--vscode-editor-foreground);\n    }\n\n    .results-section,\n    .error-section {\n      background-color: var(--vscode-editor-background);\n      border: 1px solid var(--vscode-panel-border);\n      border-radius: 8px;\n      padding: 24px;\n      text-align: center;\n    }\n\n    .error-section {\n      border-color: var(--vscode-inputValidation-errorBorder);\n    }\n\n    .results-content,\n    .error-content {\n      margin-top: 16px;\n    }\n\n    .spinner {\n      border: 2px solid var(--vscode-progressBar-background);\n      border-top: 2px solid var(--vscode-progressBar-foreground);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n      animation: spin 1s linear infinite;\n    }\n\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  `]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}