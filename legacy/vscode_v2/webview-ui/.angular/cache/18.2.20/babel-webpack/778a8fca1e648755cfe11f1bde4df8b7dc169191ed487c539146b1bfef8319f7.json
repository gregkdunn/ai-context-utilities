{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.clickCount = 0;\n  }\n  testClick() {\n    this.clickCount++;\n    console.log('Test click worked!', this.clickCount);\n  }\n  vscodeVariablesWorking() {\n    // Simple test to see if VSCode CSS variables are available\n    return typeof getComputedStyle !== 'undefined';\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div style=\"padding: 20px; font-family: var(--vscode-font-family); background-color: var(--vscode-editor-background); color: var(--vscode-editor-foreground);\">\n      <h1>ðŸŽ‰ Angular App Loaded Successfully!</h1>\n      <p>This is a simple test to verify Angular is working in VSCode webview.</p>\n      \n      <div style=\"margin: 20px 0; padding: 15px; background-color: var(--vscode-textBlockQuote-background); border-radius: 4px;\">\n        <h3>âœ… Test Results:</h3>\n        <ul>\n          <li>Angular standalone component: Working</li>\n          <li>VSCode CSS variables: {{ vscodeVariablesWorking() ? 'Working' : 'Not working' }}</li>\n          <li>Component rendering: Working</li>\n          <li>TypeScript compilation: Working</li>\n        </ul>\n      </div>\n      \n      <button \n        (click)=\"testClick()\"\n        style=\"padding: 10px 20px; background-color: var(--vscode-button-background); color: var(--vscode-button-foreground); border: none; border-radius: 4px; cursor: pointer;\">\n        Test Click Event\n      </button>\n      \n      <div *ngIf=\"clickCount > 0\" style=\"margin-top: 10px;\">\n        <p>Button clicked {{ clickCount }} time(s)! ðŸŽ¯</p>\n      </div>\n      \n      <div style=\"margin-top: 20px; font-size: 12px; color: var(--vscode-descriptionForeground);\">\n        <p>If you can see this, Angular is loading correctly. The issue with the main app might be:</p>\n        <ul>\n          <li>Complex component imports</li>\n          <li>Service dependencies</li>\n          <li>New Angular control flow syntax (@if/@for)</li>\n          <li>Module loading issues</li>\n        </ul>\n      </div>\n    </div>\n  `,\n  styles: []\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}