{"ast":null,"code":"import { EventEmitter, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/vscode.service\";\nimport * as i2 from \"@angular/forms\";\nconst _forTrack0 = ($index, $item) => $item.type;\nconst _forTrack1 = ($index, $item) => $item.path;\nconst _forTrack2 = ($index, $item) => $item.hash;\nfunction FileSelectorComponent_For_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FileSelectorComponent_For_11_Template_button_click_0_listener() {\n      const mode_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectMode(mode_r2.type));\n    });\n    i0.ɵɵelementStart(1, \"div\", 13)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 14);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mode_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.getModeButtonClass(mode_r2.type));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(mode_r2.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mode_r2.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mode_r2.description);\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 20);\n    i0.ɵɵtext(2, \"\\u23F3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Loading uncommitted changes...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 21);\n    i0.ɵɵtext(2, \"\\uD83D\\uDCDD\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No uncommitted changes found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 22);\n    i0.ɵɵtext(6, \"Make some changes to see them here\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Conditional_8_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"input\", 24);\n    i0.ɵɵlistener(\"change\", function FileSelectorComponent_Conditional_12_Conditional_8_For_2_Template_input_change_1_listener() {\n      const file_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.toggleFileSelection(file_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 25);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 26);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", file_r6.selected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r6.path, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r2.getStatusBadgeClass(file_r6.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", file_r6.status.toUpperCase(), \" \");\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵrepeaterCreate(1, FileSelectorComponent_Conditional_12_Conditional_8_For_2_Template, 6, 5, \"div\", 23, _forTrack1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r2.uncommittedFiles());\n  }\n}\nfunction FileSelectorComponent_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 15)(2, \"h4\", 16);\n    i0.ɵɵtext(3, \"Uncommitted Changes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function FileSelectorComponent_Conditional_12_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleSelectAll());\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, FileSelectorComponent_Conditional_12_Conditional_6_Template, 5, 0, \"div\", 18)(7, FileSelectorComponent_Conditional_12_Conditional_7_Template, 7, 0, \"div\", 18)(8, FileSelectorComponent_Conditional_12_Conditional_8_Template, 3, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.areAllSelected() ? \"Unselect All\" : \"Select All\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r2.isLoadingData() ? 6 : ctx_r2.uncommittedFiles().length === 0 ? 7 : 8);\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function FileSelectorComponent_Conditional_13_Conditional_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.clearCommitSelection());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Clear Selection (\", ctx_r2.selectedCommits().length, \") \");\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 20);\n    i0.ɵɵtext(2, \"\\u23F3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Loading commit history...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_13_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \"Try a different search term\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 21);\n    i0.ɵɵtext(2, \"\\uD83D\\uDD0D\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No commits found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FileSelectorComponent_Conditional_13_Conditional_13_Conditional_5_Template, 2, 0, \"p\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵconditional(ctx_r2.commitSearch ? 5 : -1);\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_14_For_2_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 38);\n    i0.ɵɵtext(1, \"\\u2713\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_14_For_2_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const commit_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", commit_r10.files.length, \" file(s)\");\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_14_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵlistener(\"click\", function FileSelectorComponent_Conditional_13_Conditional_14_For_2_Template_div_click_0_listener() {\n      const commit_r10 = i0.ɵɵrestoreView(_r9).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.selectCommit(commit_r10));\n    });\n    i0.ɵɵelementStart(1, \"div\", 35)(2, \"span\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 37)(5, \"div\", 13);\n    i0.ɵɵtemplate(6, FileSelectorComponent_Conditional_13_Conditional_14_For_2_Conditional_6_Template, 2, 0, \"span\", 38);\n    i0.ɵɵelementStart(7, \"div\", 39);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 40)(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, FileSelectorComponent_Conditional_13_Conditional_14_For_2_Conditional_14_Template, 2, 1, \"span\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const commit_r10 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"bg-vscode-list-activeSelectionBackground\", commit_r10.selected)(\"border-l-vscode-button-background\", commit_r10.selected)(\"border-l-transparent\", !commit_r10.selected);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", commit_r10.hash.substring(0, 7), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(commit_r10.selected ? 6 : -1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", commit_r10.message, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(commit_r10.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.formatDate(commit_r10.date));\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(commit_r10.files.length > 0 ? 14 : -1);\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵrepeaterCreate(1, FileSelectorComponent_Conditional_13_Conditional_14_For_2_Template, 15, 12, \"div\", 33, _forTrack2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r2.filteredCommits());\n  }\n}\nfunction FileSelectorComponent_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 15)(2, \"h4\", 16);\n    i0.ɵɵtext(3, \"Select Commits\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, FileSelectorComponent_Conditional_13_Conditional_4_Template, 2, 1, \"button\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 28)(6, \"p\", 29)(7, \"span\", 30);\n    i0.ɵɵtext(8, \"\\uD83D\\uDCA1 Multi-commit selection:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" Click a commit to select all commits from that point to the latest. Click a selected commit to deselect it and all commits after it. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 31)(11, \"input\", 32);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function FileSelectorComponent_Conditional_13_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.commitSearch, $event) || (ctx_r2.commitSearch = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"input\", function FileSelectorComponent_Conditional_13_Template_input_input_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.filterCommits());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, FileSelectorComponent_Conditional_13_Conditional_12_Template, 5, 0, \"div\", 18)(13, FileSelectorComponent_Conditional_13_Conditional_13_Template, 6, 1, \"div\", 18)(14, FileSelectorComponent_Conditional_13_Conditional_14_Template, 3, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵconditional(ctx_r2.selectedCommits().length > 0 ? 4 : -1);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.commitSearch);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r2.isLoadingData() ? 12 : ctx_r2.filteredCommits().length === 0 ? 13 : 14);\n  }\n}\nfunction FileSelectorComponent_Conditional_14_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 46)(1, \"div\", 48);\n    i0.ɵɵtext(2, \"\\u23F3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 22);\n    i0.ɵɵtext(4, \"Loading branch diff...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileSelectorComponent_Conditional_14_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"span\", 49)(2, \"span\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" files changed \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 50);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 51);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.branchDiffStats().filesChanged);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" +\", ctx_r2.branchDiffStats().additions, \" additions \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" -\", ctx_r2.branchDiffStats().deletions, \" deletions \");\n  }\n}\nfunction FileSelectorComponent_Conditional_14_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 46)(1, \"p\", 52);\n    i0.ɵɵtext(2, \"No diff available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileSelectorComponent_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h4\", 16);\n    i0.ɵɵtext(2, \"Branch to Main Diff\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 41)(4, \"div\", 42)(5, \"span\", 43);\n    i0.ɵɵtext(6, \"\\uD83C\\uDF3F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\")(8, \"p\", 44);\n    i0.ɵɵtext(9, \" Comparing current branch to main \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 45);\n    i0.ɵɵtext(11, \" All changes from your branch will be included \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, FileSelectorComponent_Conditional_14_Conditional_12_Template, 5, 0, \"div\", 46)(13, FileSelectorComponent_Conditional_14_Conditional_13_Template, 9, 3, \"div\", 47)(14, FileSelectorComponent_Conditional_14_Conditional_14_Template, 3, 0, \"div\", 46);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵconditional(ctx_r2.isLoadingData() ? 12 : ctx_r2.branchDiffStats() ? 13 : 14);\n  }\n}\nfunction FileSelectorComponent_Conditional_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtext(1, \"\\u23F3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Loading \");\n  }\n}\nfunction FileSelectorComponent_Conditional_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" \\uD83D\\uDD04 Refresh \");\n  }\n}\nfunction FileSelectorComponent_Conditional_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtext(1, \"\\u23F3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" Generating... \");\n  }\n}\nfunction FileSelectorComponent_Conditional_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" \\uD83D\\uDCC4 View Diff \");\n  }\n}\nexport let FileSelectorComponent = /*#__PURE__*/(() => {\n  class FileSelectorComponent {\n    ngOnInit() {\n      this.setupMessageHandlers();\n      this.loadInitialData();\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    constructor(vscode) {\n      this.vscode = vscode;\n      this.selectionChanged = new EventEmitter();\n      this.subscriptions = new Subscription();\n      this.isLoadingData = signal(false);\n      this.isGeneratingDiff = signal(false);\n      this.selectionModes = [{\n        type: 'uncommitted',\n        label: 'Uncommitted',\n        icon: '📝',\n        description: 'Changes not yet committed'\n      }, {\n        type: 'commit',\n        label: 'Previous Commit',\n        icon: '📚',\n        description: 'Select from git history'\n      }, {\n        type: 'branch-diff',\n        label: 'Branch Diff',\n        icon: '🌿',\n        description: 'All changes from current branch'\n      }];\n      this.currentMode = signal('uncommitted');\n      this.uncommittedFiles = signal([]);\n      this.commits = signal([]);\n      this.filteredCommits = signal([]);\n      this.selectedCommits = signal([]); // Changed to array for multiple selection\n      this.branchDiffStats = signal(null);\n      this.commitSearch = '';\n    }\n    selectMode(mode) {\n      this.currentMode.set(mode);\n      this.emitSelection();\n    }\n    getModeButtonClass(mode) {\n      const baseClass = 'border transition-all duration-200';\n      if (this.currentMode() === mode) {\n        return `${baseClass} bg-vscode-button-background text-vscode-button-foreground border-vscode-button-background`;\n      }\n      return `${baseClass} bg-vscode-button-secondaryBackground text-vscode-button-secondaryForeground border-vscode-panel-border hover:bg-vscode-list-hoverBackground`;\n    }\n    getStatusBadgeClass(status) {\n      switch (status) {\n        case 'added':\n          return 'bg-green-100 text-green-800 border border-green-200';\n        case 'modified':\n          return 'bg-blue-100 text-blue-800 border border-blue-200';\n        case 'deleted':\n          return 'bg-red-100 text-red-800 border border-red-200';\n        default:\n          return 'bg-gray-100 text-gray-800 border border-gray-200';\n      }\n    }\n    toggleFileSelection(file) {\n      const files = this.uncommittedFiles();\n      const index = files.findIndex(f => f.path === file.path);\n      if (index !== -1) {\n        files[index].selected = !files[index].selected;\n        this.uncommittedFiles.set([...files]);\n        this.emitSelection();\n      }\n    }\n    toggleSelectAll() {\n      const files = this.uncommittedFiles();\n      const allSelected = this.areAllSelected();\n      files.forEach(f => f.selected = !allSelected);\n      this.uncommittedFiles.set([...files]);\n      this.emitSelection();\n    }\n    areAllSelected() {\n      const files = this.uncommittedFiles();\n      return files.length > 0 && files.every(f => f.selected);\n    }\n    selectCommit(commit) {\n      const commits = this.filteredCommits();\n      const clickedIndex = commits.findIndex(c => c.hash === commit.hash);\n      if (clickedIndex === -1) return;\n      // If commit is already selected, deselect it and all commits after it\n      if (commit.selected) {\n        this.deselectCommitAndAfter(clickedIndex);\n      } else {\n        // Select from this commit to the latest (index 0)\n        this.selectCommitRange(0, clickedIndex);\n      }\n      this.updateSelectedCommits();\n      this.emitSelection();\n    }\n    selectCommitRange(startIndex, endIndex) {\n      const commits = this.filteredCommits();\n      // Clear all selections first\n      commits.forEach(c => c.selected = false);\n      // Select range from start to end (inclusive)\n      for (let i = startIndex; i <= endIndex; i++) {\n        if (commits[i]) {\n          commits[i].selected = true;\n        }\n      }\n      this.filteredCommits.set([...commits]);\n      // Also update the main commits array if they're different\n      if (this.commitSearch) {\n        const allCommits = this.commits();\n        commits.forEach(filteredCommit => {\n          const mainCommit = allCommits.find(c => c.hash === filteredCommit.hash);\n          if (mainCommit) {\n            mainCommit.selected = filteredCommit.selected;\n          }\n        });\n        this.commits.set([...allCommits]);\n      }\n    }\n    deselectCommitAndAfter(fromIndex) {\n      const commits = this.filteredCommits();\n      // Deselect from clicked commit to the end\n      for (let i = fromIndex; i < commits.length; i++) {\n        if (commits[i]) {\n          commits[i].selected = false;\n        }\n      }\n      this.filteredCommits.set([...commits]);\n      // Also update the main commits array if they're different\n      if (this.commitSearch) {\n        const allCommits = this.commits();\n        commits.forEach(filteredCommit => {\n          const mainCommit = allCommits.find(c => c.hash === filteredCommit.hash);\n          if (mainCommit) {\n            mainCommit.selected = filteredCommit.selected;\n          }\n        });\n        this.commits.set([...allCommits]);\n      }\n    }\n    updateSelectedCommits() {\n      const selectedCommits = this.filteredCommits().filter(c => c.selected);\n      this.selectedCommits.set(selectedCommits);\n    }\n    clearCommitSelection() {\n      const commits = this.filteredCommits();\n      commits.forEach(c => c.selected = false);\n      this.filteredCommits.set([...commits]);\n      const allCommits = this.commits();\n      allCommits.forEach(c => c.selected = false);\n      this.commits.set([...allCommits]);\n      this.selectedCommits.set([]);\n      this.emitSelection();\n    }\n    filterCommits() {\n      const search = this.commitSearch.toLowerCase();\n      const filtered = this.commits().filter(commit => commit.message.toLowerCase().includes(search) || commit.hash.toLowerCase().includes(search) || commit.author.toLowerCase().includes(search));\n      this.filteredCommits.set(filtered);\n    }\n    formatDate(date) {\n      return new Intl.RelativeTimeFormat('en', {\n        numeric: 'auto'\n      }).format(Math.floor((date.getTime() - Date.now()) / (1000 * 60 * 60 * 24)), 'day');\n    }\n    hasValidSelection() {\n      switch (this.currentMode()) {\n        case 'uncommitted':\n          return this.uncommittedFiles().some(f => f.selected);\n        case 'commit':\n          return this.selectedCommits().length > 0;\n        case 'branch-diff':\n          return this.branchDiffStats() !== null;\n        default:\n          return false;\n      }\n    }\n    getSelectionSummary() {\n      switch (this.currentMode()) {\n        case 'uncommitted':\n          const selected = this.uncommittedFiles().filter(f => f.selected).length;\n          const total = this.uncommittedFiles().length;\n          return `${selected}/${total} files selected`;\n        case 'commit':\n          const selectedCommits = this.selectedCommits();\n          if (selectedCommits.length === 0) {\n            return 'No commits selected';\n          } else if (selectedCommits.length === 1) {\n            return `1 commit selected: ${selectedCommits[0].hash.substring(0, 7)}`;\n          } else {\n            const latest = selectedCommits[0].hash.substring(0, 7);\n            const oldest = selectedCommits[selectedCommits.length - 1].hash.substring(0, 7);\n            return `${selectedCommits.length} commits selected: ${latest}...${oldest}`;\n          }\n        case 'branch-diff':\n          return this.branchDiffStats() ? `${this.branchDiffStats().filesChanged} files in diff` : 'Loading diff...';\n        default:\n          return '';\n      }\n    }\n    refreshData() {\n      // Clear current data\n      this.uncommittedFiles.set([]);\n      this.commits.set([]);\n      this.filteredCommits.set([]);\n      this.branchDiffStats.set(null);\n      this.selectedCommits.set([]);\n      // Reload from Git\n      this.loadInitialData();\n    }\n    applySelection() {\n      this.emitSelection();\n    }\n    generateAndViewDiff() {\n      if (!this.hasValidSelection()) return;\n      this.isGeneratingDiff.set(true);\n      const mode = this.currentMode();\n      let diffData = {\n        mode\n      };\n      // Add specific data based on mode\n      switch (mode) {\n        case 'commit':\n          const selectedCommits = this.selectedCommits();\n          if (selectedCommits.length === 1) {\n            diffData.commitHash = selectedCommits[0].hash;\n          } else if (selectedCommits.length > 1) {\n            // For multiple commits, use the oldest commit hash\n            diffData.commitHash = selectedCommits[selectedCommits.length - 1].hash;\n          }\n          break;\n        case 'uncommitted':\n        case 'branch-diff':\n          // No additional data needed\n          break;\n      }\n      // Send message to generate diff\n      this.vscode.postMessage('generateGitDiff', diffData);\n    }\n    setupMessageHandlers() {\n      this.subscriptions.add(this.vscode.onMessage().subscribe(message => {\n        if (!message) return;\n        switch (message.command) {\n          case 'uncommittedChanges':\n            this.handleUncommittedChangesResponse(message.data);\n            break;\n          case 'commitHistory':\n            this.handleCommitHistoryResponse(message.data);\n            break;\n          case 'branchDiff':\n            this.handleBranchDiffResponse(message.data);\n            break;\n          case 'gitDiffComplete':\n            this.handleGitDiffComplete(message.data);\n            break;\n          case 'gitDiffError':\n            this.handleGitDiffError(message.data);\n            break;\n          case 'workflowError':\n            this.handleError(message.data?.error);\n            break;\n        }\n      }));\n    }\n    loadInitialData() {\n      this.isLoadingData.set(true);\n      // Request real data from VSCode extension\n      this.vscode.postMessage('getUncommittedChanges');\n      this.vscode.postMessage('getCommitHistory', {\n        limit: 50\n      });\n      this.vscode.postMessage('getBranchDiff');\n    }\n    handleUncommittedChangesResponse(changes) {\n      const fileChanges = changes.map(change => ({\n        path: change.path,\n        status: change.status,\n        selected: true // Default to selected for all uncommitted files\n      }));\n      this.uncommittedFiles.set(fileChanges);\n      this.isLoadingData.set(false);\n      // Auto-emit selection if we have data and current mode is uncommitted\n      if (this.currentMode() === 'uncommitted') {\n        this.emitSelection();\n      }\n    }\n    handleCommitHistoryResponse(commits) {\n      const gitCommits = commits.map(commit => ({\n        hash: commit.hash,\n        message: commit.message,\n        author: commit.author,\n        date: new Date(commit.date),\n        files: commit.files || [],\n        selected: false // Initialize all commits as unselected\n      }));\n      this.commits.set(gitCommits);\n      this.filteredCommits.set(gitCommits);\n      this.isLoadingData.set(false);\n    }\n    handleBranchDiffResponse(data) {\n      this.branchDiffStats.set({\n        filesChanged: data.stats.filesChanged,\n        additions: data.stats.additions,\n        deletions: data.stats.deletions\n      });\n      this.isLoadingData.set(false);\n      // Auto-emit selection if current mode is branch-diff\n      if (this.currentMode() === 'branch-diff') {\n        this.emitSelection();\n      }\n    }\n    handleGitDiffComplete(data) {\n      this.isGeneratingDiff.set(false);\n      console.log('Git diff generated successfully:', data);\n      // The main app component will handle navigation to the git diff view\n      // via the gitDiffGenerated message sent by the webview provider\n    }\n    handleGitDiffError(data) {\n      this.isGeneratingDiff.set(false);\n      console.error('Git diff generation failed:', data.error);\n      // Could show a user notification here if needed\n      // For now, just log the error\n    }\n    handleError(error) {\n      console.error('Git operation failed:', error);\n      this.isLoadingData.set(false);\n      this.isGeneratingDiff.set(false);\n      // Set empty data on error\n      this.uncommittedFiles.set([]);\n      this.commits.set([]);\n      this.filteredCommits.set([]);\n      this.branchDiffStats.set(null);\n      this.selectedCommits.set([]);\n    }\n    emitSelection() {\n      const selection = {\n        mode: this.currentMode(),\n        files: this.currentMode() === 'uncommitted' ? this.uncommittedFiles().filter(f => f.selected) : [],\n        commits: this.currentMode() === 'commit' ? this.selectedCommits() : undefined,\n        diff: this.getCurrentDiff()\n      };\n      this.selectionChanged.emit(selection);\n    }\n    getCurrentDiff() {\n      // For now, return a placeholder - diff will be fetched when needed\n      switch (this.currentMode()) {\n        case 'uncommitted':\n          return 'uncommitted-changes-diff';\n        case 'commit':\n          const selected = this.selectedCommits();\n          if (selected.length === 0) return '';\n          if (selected.length === 1) {\n            return `commit-${selected[0].hash}-diff`;\n          }\n          // For multiple commits, create a range diff\n          const latest = selected[0].hash;\n          const oldest = selected[selected.length - 1].hash;\n          return `commit-range-${oldest}-to-${latest}-diff`;\n        case 'branch-diff':\n          return 'branch-diff';\n        default:\n          return '';\n      }\n    }\n    static {\n      this.ɵfac = function FileSelectorComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FileSelectorComponent)(i0.ɵɵdirectiveInject(i1.VscodeService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FileSelectorComponent,\n        selectors: [[\"app-file-selector\"]],\n        outputs: {\n          selectionChanged: \"selectionChanged\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 24,\n        vars: 9,\n        consts: [[1, \"bg-vscode-editor-background\", \"p-4\", \"rounded-lg\", \"border\", \"border-vscode-panel-border\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mb-6\"], [1, \"text-vscode-foreground\", \"text-lg\", \"font-semibold\"], [1, \"text-vscode-descriptionForeground\", \"text-sm\"], [1, \"mb-6\"], [1, \"text-vscode-foreground\", \"text-sm\", \"font-medium\", \"mb-3\", \"block\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-3\", \"gap-3\"], [1, \"px-4\", \"py-3\", \"rounded\", \"text-sm\", \"font-medium\", \"transition-colors\", 3, \"class\"], [1, \"space-y-3\"], [1, \"mt-6\", \"flex\", \"gap-3\", \"justify-end\"], [1, \"px-4\", \"py-2\", \"text-sm\", \"bg-vscode-button-secondaryBackground\", \"text-vscode-button-secondaryForeground\", \"rounded\", \"hover:bg-vscode-button-secondaryHoverBackground\", \"disabled:opacity-50\", 3, \"click\", \"disabled\"], [1, \"px-4\", \"py-2\", \"text-sm\", \"bg-vscode-button-background\", \"text-vscode-button-foreground\", \"rounded\", \"hover:bg-vscode-button-hoverBackground\", \"disabled:opacity-50\", \"disabled:cursor-not-allowed\", 3, \"click\", \"disabled\"], [1, \"px-4\", \"py-3\", \"rounded\", \"text-sm\", \"font-medium\", \"transition-colors\", 3, \"click\"], [1, \"flex\", \"items-center\", \"gap-2\"], [1, \"text-xs\", \"opacity-75\", \"mt-1\"], [1, \"flex\", \"items-center\", \"justify-between\"], [1, \"text-vscode-foreground\", \"font-medium\"], [1, \"text-vscode-button-background\", \"hover:text-vscode-button-hoverBackground\", \"text-sm\", 3, \"click\"], [1, \"text-vscode-descriptionForeground\", \"text-center\", \"py-8\"], [1, \"space-y-2\", \"max-h-64\", \"overflow-y-auto\", \"border\", \"border-vscode-panel-border\", \"rounded\", \"p-2\"], [1, \"text-2xl\", \"mb-2\", \"animate-spin\"], [1, \"text-4xl\", \"mb-2\"], [1, \"text-xs\"], [1, \"flex\", \"items-center\", \"gap-3\", \"p-2\", \"rounded\", \"hover:bg-vscode-list-hoverBackground\"], [\"type\", \"checkbox\", 1, \"w-4\", \"h-4\", \"rounded\", \"border-vscode-checkbox-border\", \"bg-vscode-checkbox-background\", 3, \"change\", \"checked\"], [1, \"flex-1\", \"text-vscode-foreground\", \"text-sm\", \"font-mono\", \"truncate\"], [1, \"px-2\", \"py-1\", \"text-xs\", \"rounded\", \"font-medium\"], [1, \"text-vscode-button-background\", \"hover:text-vscode-button-hoverBackground\", \"text-sm\"], [1, \"bg-vscode-textBlockQuote-background\", \"border\", \"border-vscode-panel-border\", \"rounded\", \"p-3\", \"text-xs\"], [1, \"text-vscode-textBlockQuote-foreground\"], [1, \"font-semibold\"], [1, \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Search commits by message or hash...\", 1, \"w-full\", \"px-3\", \"py-2\", \"bg-vscode-input-background\", \"text-vscode-input-foreground\", \"border\", \"border-vscode-input-border\", \"rounded\", \"focus:border-vscode-inputOption-activeBorder\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"p-3\", \"rounded\", \"hover:bg-vscode-list-hoverBackground\", \"cursor-pointer\", \"transition-colors\", \"border-l-4\", 3, \"bg-vscode-list-activeSelectionBackground\", \"border-l-vscode-button-background\", \"border-l-transparent\"], [1, \"p-3\", \"rounded\", \"hover:bg-vscode-list-hoverBackground\", \"cursor-pointer\", \"transition-colors\", \"border-l-4\", 3, \"click\"], [1, \"flex\", \"items-start\", \"gap-3\"], [1, \"text-vscode-descriptionForeground\", \"text-xs\", \"font-mono\", \"mt-1\"], [1, \"flex-1\", \"min-w-0\"], [1, \"text-vscode-button-background\", \"text-sm\"], [1, \"text-vscode-foreground\", \"text-sm\", \"font-medium\", \"truncate\"], [1, \"text-vscode-descriptionForeground\", \"text-xs\", \"mt-1\", \"flex\", \"items-center\", \"gap-4\"], [1, \"bg-vscode-textBlockQuote-background\", \"border\", \"border-vscode-panel-border\", \"rounded\", \"p-4\"], [1, \"flex\", \"items-center\", \"gap-2\", \"mb-3\"], [1, \"text-2xl\"], [1, \"text-vscode-textBlockQuote-foreground\", \"text-sm\", \"font-medium\"], [1, \"text-vscode-descriptionForeground\", \"text-xs\"], [1, \"text-center\", \"py-4\"], [1, \"flex\", \"flex-wrap\", \"gap-4\", \"text-xs\"], [1, \"text-xl\", \"mb-2\", \"animate-spin\"], [1, \"text-vscode-foreground\"], [1, \"text-vscode-gitDecoration-addedResourceForeground\"], [1, \"text-vscode-gitDecoration-deletedResourceForeground\"], [1, \"text-xs\", \"text-vscode-descriptionForeground\"], [1, \"animate-spin\"]],\n        template: function FileSelectorComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n            i0.ɵɵtext(3, \"File Selection\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 3);\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n            i0.ɵɵtext(8, \" Select Changes From: \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 6);\n            i0.ɵɵrepeaterCreate(10, FileSelectorComponent_For_11_Template, 8, 5, \"button\", 7, _forTrack0);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(12, FileSelectorComponent_Conditional_12_Template, 9, 2, \"div\", 8)(13, FileSelectorComponent_Conditional_13_Template, 15, 3, \"div\", 8)(14, FileSelectorComponent_Conditional_14_Template, 15, 1, \"div\", 8);\n            i0.ɵɵelementStart(15, \"div\", 9)(16, \"button\", 10);\n            i0.ɵɵlistener(\"click\", function FileSelectorComponent_Template_button_click_16_listener() {\n              return ctx.refreshData();\n            });\n            i0.ɵɵtemplate(17, FileSelectorComponent_Conditional_17_Template, 3, 0)(18, FileSelectorComponent_Conditional_18_Template, 1, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function FileSelectorComponent_Template_button_click_19_listener() {\n              return ctx.generateAndViewDiff();\n            });\n            i0.ɵɵtemplate(20, FileSelectorComponent_Conditional_20_Template, 3, 0)(21, FileSelectorComponent_Conditional_21_Template, 1, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function FileSelectorComponent_Template_button_click_22_listener() {\n              return ctx.applySelection();\n            });\n            i0.ɵɵtext(23, \" Apply Selection \");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" \", ctx.getSelectionSummary(), \" \");\n            i0.ɵɵadvance(5);\n            i0.ɵɵrepeater(ctx.selectionModes);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx.currentMode() === \"uncommitted\" ? 12 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.currentMode() === \"commit\" ? 13 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.currentMode() === \"branch-diff\" ? 14 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.isLoadingData());\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.isLoadingData() ? 17 : 18);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", !ctx.hasValidSelection() || ctx.isGeneratingDiff());\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.isGeneratingDiff() ? 20 : 21);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", !ctx.hasValidSelection());\n          }\n        },\n        dependencies: [CommonModule, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return FileSelectorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}